/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShopApi);
  }
}(this, function(expect, ShopApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    // create a new instance
    //instance = new ShopApi.CustomerAddress();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CustomerAddress', function() {
    it('should create an instance of CustomerAddress', function() {
      // uncomment below and update the code to test CustomerAddress
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be.a(ShopApi.CustomerAddress);
    });

    it('should have the property address1 (base name: "address1")', function() {
      // uncomment below and update the code to test the property address1
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property address2 (base name: "address2")', function() {
      // uncomment below and update the code to test the property address2
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property addressId (base name: "address_id")', function() {
      // uncomment below and update the code to test the property addressId
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property companyName (base name: "company_name")', function() {
      // uncomment below and update the code to test the property companyName
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property countryCode (base name: "country_code")', function() {
      // uncomment below and update the code to test the property countryCode
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creation_date")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property fullName (base name: "full_name")', function() {
      // uncomment below and update the code to test the property fullName
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property jobTitle (base name: "job_title")', function() {
      // uncomment below and update the code to test the property jobTitle
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "last_modified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property phone (base name: "phone")', function() {
      // uncomment below and update the code to test the property phone
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property postBox (base name: "post_box")', function() {
      // uncomment below and update the code to test the property postBox
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property postalCode (base name: "postal_code")', function() {
      // uncomment below and update the code to test the property postalCode
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property preferred (base name: "preferred")', function() {
      // uncomment below and update the code to test the property preferred
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property salutation (base name: "salutation")', function() {
      // uncomment below and update the code to test the property salutation
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property secondName (base name: "second_name")', function() {
      // uncomment below and update the code to test the property secondName
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property stateCode (base name: "state_code")', function() {
      // uncomment below and update the code to test the property stateCode
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property suffix (base name: "suffix")', function() {
      // uncomment below and update the code to test the property suffix
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property suite (base name: "suite")', function() {
      // uncomment below and update the code to test the property suite
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new ShopApi.CustomerAddress();
      //expect(instance).to.be();
    });

  });

}));
