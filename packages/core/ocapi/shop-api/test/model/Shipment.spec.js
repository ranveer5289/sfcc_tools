/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShopApi);
  }
}(this, function(expect, ShopApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    // create a new instance
    //instance = new ShopApi.Shipment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Shipment', function() {
    it('should create an instance of Shipment', function() {
      // uncomment below and update the code to test Shipment
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be.a(ShopApi.Shipment);
    });

    it('should have the property adjustedMerchandizeTotalTax (base name: "adjusted_merchandize_total_tax")', function() {
      // uncomment below and update the code to test the property adjustedMerchandizeTotalTax
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property adjustedShippingTotalTax (base name: "adjusted_shipping_total_tax")', function() {
      // uncomment below and update the code to test the property adjustedShippingTotalTax
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property cFromStoreId (base name: "c_fromStoreId")', function() {
      // uncomment below and update the code to test the property cFromStoreId
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property cShipmentType (base name: "c_shipmentType")', function() {
      // uncomment below and update the code to test the property cShipmentType
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property cStorePickupMessage (base name: "c_storePickupMessage")', function() {
      // uncomment below and update the code to test the property cStorePickupMessage
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property gift (base name: "gift")', function() {
      // uncomment below and update the code to test the property gift
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property giftMessage (base name: "gift_message")', function() {
      // uncomment below and update the code to test the property giftMessage
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property merchandizeTotalTax (base name: "merchandize_total_tax")', function() {
      // uncomment below and update the code to test the property merchandizeTotalTax
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property productSubTotal (base name: "product_sub_total")', function() {
      // uncomment below and update the code to test the property productSubTotal
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property productTotal (base name: "product_total")', function() {
      // uncomment below and update the code to test the property productTotal
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipmentId (base name: "shipment_id")', function() {
      // uncomment below and update the code to test the property shipmentId
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipmentNo (base name: "shipment_no")', function() {
      // uncomment below and update the code to test the property shipmentNo
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shipmentTotal (base name: "shipment_total")', function() {
      // uncomment below and update the code to test the property shipmentTotal
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress (base name: "shipping_address")', function() {
      // uncomment below and update the code to test the property shippingAddress
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shippingMethod (base name: "shipping_method")', function() {
      // uncomment below and update the code to test the property shippingMethod
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shippingStatus (base name: "shipping_status")', function() {
      // uncomment below and update the code to test the property shippingStatus
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shippingTotal (base name: "shipping_total")', function() {
      // uncomment below and update the code to test the property shippingTotal
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property shippingTotalTax (base name: "shipping_total_tax")', function() {
      // uncomment below and update the code to test the property shippingTotalTax
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property taxTotal (base name: "tax_total")', function() {
      // uncomment below and update the code to test the property taxTotal
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

    it('should have the property trackingNumber (base name: "tracking_number")', function() {
      // uncomment below and update the code to test the property trackingNumber
      //var instance = new ShopApi.Shipment();
      //expect(instance).to.be();
    });

  });

}));
