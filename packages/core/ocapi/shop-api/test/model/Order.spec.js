/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ShopApi);
  }
}(this, function(expect, ShopApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    // create a new instance
    //instance = new ShopApi.Order();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Order', function() {
    it('should create an instance of Order', function() {
      // uncomment below and update the code to test Order
      //var instance = new ShopApi.Order();
      //expect(instance).to.be.a(ShopApi.Order);
    });

    it('should have the property adjustedMerchandizeTotalTax (base name: "adjusted_merchandize_total_tax")', function() {
      // uncomment below and update the code to test the property adjustedMerchandizeTotalTax
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property adjustedShippingTotalTax (base name: "adjusted_shipping_total_tax")', function() {
      // uncomment below and update the code to test the property adjustedShippingTotalTax
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress (base name: "billing_address")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property bonusDiscountLineItems (base name: "bonus_discount_line_items")', function() {
      // uncomment below and update the code to test the property bonusDiscountLineItems
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property channelType (base name: "channel_type")', function() {
      // uncomment below and update the code to test the property channelType
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property confirmationStatus (base name: "confirmation_status")', function() {
      // uncomment below and update the code to test the property confirmationStatus
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property couponItems (base name: "coupon_items")', function() {
      // uncomment below and update the code to test the property couponItems
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property createdBy (base name: "created_by")', function() {
      // uncomment below and update the code to test the property createdBy
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creation_date")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property currency (base name: "currency")', function() {
      // uncomment below and update the code to test the property currency
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property customerInfo (base name: "customer_info")', function() {
      // uncomment below and update the code to test the property customerInfo
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property customerName (base name: "customer_name")', function() {
      // uncomment below and update the code to test the property customerName
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property exportStatus (base name: "export_status")', function() {
      // uncomment below and update the code to test the property exportStatus
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property externalOrderStatus (base name: "external_order_status")', function() {
      // uncomment below and update the code to test the property externalOrderStatus
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property giftCertificateItems (base name: "gift_certificate_items")', function() {
      // uncomment below and update the code to test the property giftCertificateItems
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property globalPartyId (base name: "global_party_id")', function() {
      // uncomment below and update the code to test the property globalPartyId
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "last_modified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property merchandizeTotalTax (base name: "merchandize_total_tax")', function() {
      // uncomment below and update the code to test the property merchandizeTotalTax
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderNo (base name: "order_no")', function() {
      // uncomment below and update the code to test the property orderNo
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderPriceAdjustments (base name: "order_price_adjustments")', function() {
      // uncomment below and update the code to test the property orderPriceAdjustments
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderToken (base name: "order_token")', function() {
      // uncomment below and update the code to test the property orderToken
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property orderTotal (base name: "order_total")', function() {
      // uncomment below and update the code to test the property orderTotal
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property paymentInstruments (base name: "payment_instruments")', function() {
      // uncomment below and update the code to test the property paymentInstruments
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property paymentStatus (base name: "payment_status")', function() {
      // uncomment below and update the code to test the property paymentStatus
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property productItems (base name: "product_items")', function() {
      // uncomment below and update the code to test the property productItems
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property productSubTotal (base name: "product_sub_total")', function() {
      // uncomment below and update the code to test the property productSubTotal
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property productTotal (base name: "product_total")', function() {
      // uncomment below and update the code to test the property productTotal
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property shipments (base name: "shipments")', function() {
      // uncomment below and update the code to test the property shipments
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingItems (base name: "shipping_items")', function() {
      // uncomment below and update the code to test the property shippingItems
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingStatus (base name: "shipping_status")', function() {
      // uncomment below and update the code to test the property shippingStatus
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingTotal (base name: "shipping_total")', function() {
      // uncomment below and update the code to test the property shippingTotal
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property shippingTotalTax (base name: "shipping_total_tax")', function() {
      // uncomment below and update the code to test the property shippingTotalTax
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property siteId (base name: "site_id")', function() {
      // uncomment below and update the code to test the property siteId
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property sourceCode (base name: "source_code")', function() {
      // uncomment below and update the code to test the property sourceCode
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property taxTotal (base name: "tax_total")', function() {
      // uncomment below and update the code to test the property taxTotal
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

    it('should have the property taxation (base name: "taxation")', function() {
      // uncomment below and update the code to test the property taxation
      //var instance = new ShopApi.Order();
      //expect(instance).to.be();
    });

  });

}));
