/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ProductRecommendationsResult'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/ProductRecommendationsResult'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.AiApi = factory(root.ShopApi.ApiClient, root.ShopApi.ProductRecommendationsResult);
  }
}(this, function(ApiClient, ProductRecommendationsResult) {
  'use strict';

  /**
   * Ai service.
   * @module api/AiApi
   * @version 20.8
   */

  /**
   * Constructs a new AiApi. 
   * @alias module:api/AiApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * This is a beta feature that has been canceled. A future release will include the ability to obtain product recommendations by making direct calls to the Commerce Cloud Einstein API.  Returns product recommendations based on the given product or category IDs.
     * @param {String} recommenderName The recommender name.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.products 
     * @param {Array.<String>} opts.categories 
     * @param {String} opts.uuid 
     * @param {Array.<String>} opts.expand 
     * @param {Array.<String>} opts.inventoryIds 
     * @param {String} opts.currency 
     * @param {Boolean} opts.allImages 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ProductRecommendationsResult} and HTTP response
     */
    this.getAiProductRecommendationsByIDWithHttpInfo = function(recommenderName, opts) {
      opts = opts || {};
      var postBody = null;
      // verify the required parameter 'recommenderName' is set
      if (recommenderName === undefined || recommenderName === null) {
        throw new Error("Missing the required parameter 'recommenderName' when calling getAiProductRecommendationsByID");
      }

      var pathParams = {
        'recommender_name': recommenderName
      };
      var queryParams = {
        'uuid': opts['uuid'],
        'currency': opts['currency'],
        'all_images': opts['allImages'],
      };
      var collectionQueryParams = {
        'products': {
          value: opts['products'],
          collectionFormat: 'csv'
        },
        'categories': {
          value: opts['categories'],
          collectionFormat: 'csv'
        },
        'expand': {
          value: opts['expand'],
          collectionFormat: 'csv'
        },
        'inventory_ids': {
          value: opts['inventoryIds'],
          collectionFormat: 'csv'
        },
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['client_id', 'customers_auth'];
      var contentTypes = [];
      var accepts = ['application/json', 'text/xml', 'application/xml'];
      var returnType = ProductRecommendationsResult;
      return this.apiClient.callApi(
        '/ai/product_recommendations/{recommender_name}', 'GET',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * This is a beta feature that has been canceled. A future release will include the ability to obtain product recommendations by making direct calls to the Commerce Cloud Einstein API.  Returns product recommendations based on the given product or category IDs.
     * @param {String} recommenderName The recommender name.
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} opts.products 
     * @param {Array.<String>} opts.categories 
     * @param {String} opts.uuid 
     * @param {Array.<String>} opts.expand 
     * @param {Array.<String>} opts.inventoryIds 
     * @param {String} opts.currency 
     * @param {Boolean} opts.allImages 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ProductRecommendationsResult}
     */
    this.getAiProductRecommendationsByID = function(recommenderName, opts) {
      return this.getAiProductRecommendationsByIDWithHttpInfo(recommenderName, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
