/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.FilteredQuery = factory(root.ShopApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The FilteredQuery model module.
   * @module model/FilteredQuery
   * @version 20.4
   */

  /**
   * Constructs a new <code>FilteredQuery</code>.
   * A filtered query allows to filter the result of a (possibly complex) query using a (possibly complex) filter.  
   * @alias module:model/FilteredQuery
   * @class
   * @param filter {Object} Document representing a filter.  
   * @param query {Object} Document representing a query. A query contains a set of objects that define criteria  used to select records. A query can contain one of the following: 
   */
  var exports = function(filter, query) {
    var _this = this;

    _this['filter'] = filter;
    _this['query'] = query;
  };

  /**
   * Constructs a <code>FilteredQuery</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FilteredQuery} obj Optional instance to populate.
   * @return {module:model/FilteredQuery} The populated <code>FilteredQuery</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('filter')) {
        obj['filter'] = ApiClient.convertToType(data['filter'], Object);
      }
      if (data.hasOwnProperty('query')) {
        obj['query'] = ApiClient.convertToType(data['query'], Object);
      }
    }
    return obj;
  }

  /**
   * Document representing a filter.  
   * @member {Object} filter
   */
  exports.prototype['filter'] = undefined;
  /**
   * Document representing a query. A query contains a set of objects that define criteria  used to select records. A query can contain one of the following: 
   * @member {Object} query
   */
  exports.prototype['query'] = undefined;



  return exports;
}));


