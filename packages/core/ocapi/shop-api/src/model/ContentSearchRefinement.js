/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ContentSearchRefinementValue'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ContentSearchRefinementValue'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.ContentSearchRefinement = factory(root.ShopApi.ApiClient, root.ShopApi.ContentSearchRefinementValue);
  }
}(this, function(ApiClient, ContentSearchRefinementValue) {
  'use strict';



  /**
   * The ContentSearchRefinement model module.
   * @module model/ContentSearchRefinement
   * @version 20.8
   */

  /**
   * Constructs a new <code>ContentSearchRefinement</code>.
   * Document representing a search refinement attribute.
   * @alias module:model/ContentSearchRefinement
   * @class
   * @param attributeId {String} The id of the search refinement attribute. In the case of an attribute refinement, this is the  attribute id. Custom attributes are marked by the prefix \"c_\".
   */
  var exports = function(attributeId) {
    var _this = this;

    _this['attribute_id'] = attributeId;
  };

  /**
   * Constructs a <code>ContentSearchRefinement</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ContentSearchRefinement} obj Optional instance to populate.
   * @return {module:model/ContentSearchRefinement} The populated <code>ContentSearchRefinement</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('attribute_id')) {
        obj['attribute_id'] = ApiClient.convertToType(data['attribute_id'], 'String');
      }
      if (data.hasOwnProperty('label')) {
        obj['label'] = ApiClient.convertToType(data['label'], 'String');
      }
      if (data.hasOwnProperty('values')) {
        obj['values'] = ApiClient.convertToType(data['values'], [ContentSearchRefinementValue]);
      }
    }
    return obj;
  }

  /**
   * The id of the search refinement attribute. In the case of an attribute refinement, this is the  attribute id. Custom attributes are marked by the prefix \"c_\".
   * @member {String} attribute_id
   */
  exports.prototype['attribute_id'] = undefined;
  /**
   * The localized label of the refinement.
   * @member {String} label
   */
  exports.prototype['label'] = undefined;
  /**
   * The sorted array of refinement values. The array can be empty.
   * @member {Array.<module:model/ContentSearchRefinementValue>} values
   */
  exports.prototype['values'] = undefined;



  return exports;
}));


