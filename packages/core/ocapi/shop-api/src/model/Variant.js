/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.Variant = factory(root.ShopApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The Variant model module.
   * @module model/Variant
   * @version 20.8
   */

  /**
   * Constructs a new <code>Variant</code>.
   * Document representing a product variation.
   * @alias module:model/Variant
   * @class
   * @param link {String} The URL addressing the product.
   * @param productId {String} The id (SKU) of the variant.
   */
  var exports = function(link, productId) {
    var _this = this;

    _this['link'] = link;
    _this['product_id'] = productId;
  };

  /**
   * Constructs a <code>Variant</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Variant} obj Optional instance to populate.
   * @return {module:model/Variant} The populated <code>Variant</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('orderable')) {
        obj['orderable'] = ApiClient.convertToType(data['orderable'], 'Boolean');
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('price_per_unit')) {
        obj['price_per_unit'] = ApiClient.convertToType(data['price_per_unit'], 'Number');
      }
      if (data.hasOwnProperty('product_id')) {
        obj['product_id'] = ApiClient.convertToType(data['product_id'], 'String');
      }
      if (data.hasOwnProperty('variation_values')) {
        obj['variation_values'] = ApiClient.convertToType(data['variation_values'], {'String': 'String'});
      }
    }
    return obj;
  }

  /**
   * The URL addressing the product.
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * A flag indicating whether the variant is orderable.
   * @member {Boolean} orderable
   */
  exports.prototype['orderable'] = undefined;
  /**
   * The sales price of the variant.
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * The sales price of the variant.
   * @member {Number} price_per_unit
   */
  exports.prototype['price_per_unit'] = undefined;
  /**
   * The id (SKU) of the variant.
   * @member {String} product_id
   */
  exports.prototype['product_id'] = undefined;
  /**
   * The actual variation attribute id - value pairs.
   * @member {Object.<String, String>} variation_values
   */
  exports.prototype['variation_values'] = undefined;



  return exports;
}));


