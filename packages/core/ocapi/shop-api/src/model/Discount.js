/**
 * Shop API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShopApi) {
      root.ShopApi = {};
    }
    root.ShopApi.Discount = factory(root.ShopApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The Discount model module.
   * @module model/Discount
   * @version 20.8
   */

  /**
   * Constructs a new <code>Discount</code>.
   * Document representing a discount that was 
   * @alias module:model/Discount
   * @class
   * @param type {module:model/Discount.TypeEnum} The type of discount.
   */
  var exports = function(type) {
    var _this = this;

    _this['type'] = type;
  };

  /**
   * Constructs a <code>Discount</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Discount} obj Optional instance to populate.
   * @return {module:model/Discount} The populated <code>Discount</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('amount')) {
        obj['amount'] = ApiClient.convertToType(data['amount'], 'Number');
      }
      if (data.hasOwnProperty('percentage')) {
        obj['percentage'] = ApiClient.convertToType(data['percentage'], 'Number');
      }
      if (data.hasOwnProperty('price_book_id')) {
        obj['price_book_id'] = ApiClient.convertToType(data['price_book_id'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
    }
    return obj;
  }

  /**
   * The amount that is used with the amount and fixed price types.
   * @member {Number} amount
   */
  exports.prototype['amount'] = undefined;
  /**
   * The percentage that is used with percentage types.
   * @member {Number} percentage
   */
  exports.prototype['percentage'] = undefined;
  /**
   * The price book id that is used with some types.
   * @member {String} price_book_id
   */
  exports.prototype['price_book_id'] = undefined;
  /**
   * The type of discount.
   * @member {module:model/Discount.TypeEnum} type
   */
  exports.prototype['type'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "percentage"
     * @const
     */
    "percentage": "percentage",
    /**
     * value: "fixed_price"
     * @const
     */
    "fixed_price": "fixed_price",
    /**
     * value: "amount"
     * @const
     */
    "amount": "amount",
    /**
     * value: "free"
     * @const
     */
    "free": "free",
    /**
     * value: "price_book_price"
     * @const
     */
    "price_book_price": "price_book_price",
    /**
     * value: "bonus"
     * @const
     */
    "bonus": "bonus",
    /**
     * value: "total_fixed_price"
     * @const
     */
    "total_fixed_price": "total_fixed_price",
    /**
     * value: "bonus_choice"
     * @const
     */
    "bonus_choice": "bonus_choice",
    /**
     * value: "percentage_off_options"
     * @const
     */
    "percentage_off_options": "percentage_off_options"  };


  return exports;
}));


