/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from "../ApiClient";
import InventoryList from '../models/InventoryList';
import InventoryLists from '../models/InventoryLists';
import ProductInventoryRecord from '../models/ProductInventoryRecord';
import ProductInventoryRecords from '../models/ProductInventoryRecords';

/**
* InventoryLists service.
* @module api/InventoryListsApi
* @version 20.8
*/
export default class InventoryListsApi {

    /**
    * Constructs a new InventoryListsApi. 
    * @alias module:api/InventoryListsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Deletes the inventory list by ID
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    deleteInventoryListsByIDWithHttpInfo(id) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/inventory_lists/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Deletes the inventory list by ID
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    deleteInventoryListsByID(id) {
      return this.deleteInventoryListsByIDWithHttpInfo(id)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Deletes a product inventory record by ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing HTTP response
     */
    deleteInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(inventoryListId, productId) {
      let postBody = null;

      let pathParams = {
        'inventory_list_id': inventoryListId,
        'product_id': productId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;

      return this.apiClient.callApi(
        '/inventory_lists/{inventory_list_id}/product_inventory_records/{product_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Deletes a product inventory record by ID.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}
     */
    deleteInventoryListsByIDProductInventoryRecordsByID(inventoryListId, productId) {
      return this.deleteInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(inventoryListId, productId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Action to get all the inventory lists with no filtering.
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/InventoryLists} and HTTP response
     */
    getInventoryListsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start': opts['start'],
        'count': opts['count'],
        'select': opts['select']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = InventoryLists;

      return this.apiClient.callApi(
        '/inventory_lists', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Action to get all the inventory lists with no filtering.
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/InventoryLists}
     */
    getInventoryLists(opts) {
      return this.getInventoryListsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Action to get inventory list information.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/InventoryList} and HTTP response
     */
    getInventoryListsByIDWithHttpInfo(id) {
      let postBody = null;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = InventoryList;

      return this.apiClient.callApi(
        '/inventory_lists/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Action to get inventory list information.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/InventoryList}
     */
    getInventoryListsByID(id) {
      return this.getInventoryListsByIDWithHttpInfo(id)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Gets all product inventory records for an inventory list.
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/ProductInventoryRecords} and HTTP response
     */
    getInventoryListsByIDProductInventoryRecordsWithHttpInfo(inventoryListId, opts) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
        'inventory_list_id': inventoryListId
      };
      let queryParams = {
        'start': opts['start'],
        'count': opts['count'],
        'select': opts['select']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = ProductInventoryRecords;

      return this.apiClient.callApi(
        '/inventory_lists/{inventory_list_id}/product_inventory_records', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Gets all product inventory records for an inventory list.
     * @param {Object} opts Optional parameters
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/ProductInventoryRecords}
     */
    getInventoryListsByIDProductInventoryRecords(inventoryListId, opts) {
      return this.getInventoryListsByIDProductInventoryRecordsWithHttpInfo(inventoryListId, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Gets a product inventory record.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/ProductInventoryRecord} and HTTP response
     */
    getInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(inventoryListId, productId) {
      let postBody = null;

      let pathParams = {
        'inventory_list_id': inventoryListId,
        'product_id': productId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = ProductInventoryRecord;

      return this.apiClient.callApi(
        '/inventory_lists/{inventory_list_id}/product_inventory_records/{product_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Gets a product inventory record.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/ProductInventoryRecord}
     */
    getInventoryListsByIDProductInventoryRecordsByID(inventoryListId, productId) {
      return this.getInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(inventoryListId, productId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates the inventory list with the specified information.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/InventoryList} and HTTP response
     */
    patchInventoryListsByIDWithHttpInfo(body, id) {
      let postBody = body;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = ['application/json', 'text/xml', 'application/xml'];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = InventoryList;

      return this.apiClient.callApi(
        '/inventory_lists/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Updates the inventory list with the specified information.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/InventoryList}
     */
    patchInventoryListsByID(body, id) {
      return this.patchInventoryListsByIDWithHttpInfo(body, id)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Updates the product inventory record with the specified information.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/ProductInventoryRecord} and HTTP response
     */
    patchInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(body, inventoryListId, productId) {
      let postBody = body;

      let pathParams = {
        'inventory_list_id': inventoryListId,
        'product_id': productId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = ['application/json', 'text/xml', 'application/xml'];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = ProductInventoryRecord;

      return this.apiClient.callApi(
        '/inventory_lists/{inventory_list_id}/product_inventory_records/{product_id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Updates the product inventory record with the specified information.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/ProductInventoryRecord}
     */
    patchInventoryListsByIDProductInventoryRecordsByID(body, inventoryListId, productId) {
      return this.patchInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(body, inventoryListId, productId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Creates an inventory list using the information provided.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/InventoryList} and HTTP response
     */
    putInventoryListsByIDWithHttpInfo(body, id) {
      let postBody = body;

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = ['application/json', 'text/xml', 'application/xml'];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = InventoryList;

      return this.apiClient.callApi(
        '/inventory_lists/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Creates an inventory list using the information provided.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/InventoryList}
     */
    putInventoryListsByID(body, id) {
      return this.putInventoryListsByIDWithHttpInfo(body, id)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Creates a product inventory record using the information provided.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/ProductInventoryRecord} and HTTP response
     */
    putInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(body, inventoryListId, productId) {
      let postBody = body;

      let pathParams = {
        'inventory_list_id': inventoryListId,
        'product_id': productId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth2_application'];
      let contentTypes = ['application/json', 'text/xml', 'application/xml'];
      let accepts = ['application/json', 'text/xml', 'application/xml'];
      let returnType = ProductInventoryRecord;

      return this.apiClient.callApi(
        '/inventory_lists/{inventory_list_id}/product_inventory_records/{product_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Creates a product inventory record using the information provided.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/ProductInventoryRecord}
     */
    putInventoryListsByIDProductInventoryRecordsByID(body, inventoryListId, productId) {
      return this.putInventoryListsByIDProductInventoryRecordsByIDWithHttpInfo(body, inventoryListId, productId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }

}
