/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/InventoryListSearchResult', 'model/SearchRequest'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/InventoryListSearchResult'), require('../model/SearchRequest'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.InventoryListSearchApi = factory(root.DataApi.ApiClient, root.DataApi.InventoryListSearchResult, root.DataApi.SearchRequest);
  }
}(this, function(ApiClient, InventoryListSearchResult, SearchRequest) {
  'use strict';

  /**
   * InventoryListSearch service.
   * @module api/InventoryListSearchApi
   * @version 20.8
   */

  /**
   * Constructs a new InventoryListSearchApi. 
   * @alias module:api/InventoryListSearchApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;



    /**
     * Searches for inventory lists.    The query attribute specifies a complex query that can be used to narrow down the search. This is the list  of searchable attributes:    id - String  default_in_stock - boolean  description - String  on_order_inventory_enabled - boolean  status - one of {\"normal\",\"delete\"}  use_bundle_inventory_only - boolean  
     * @param {module:model/SearchRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/InventoryListSearchResult} and HTTP response
     */
    this.postInventoryListSearchWithHttpInfo = function(body) {
      var postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling postInventoryListSearch");
      }

      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = ['oauth2_application'];
      var contentTypes = ['application/json', 'text/xml', 'application/xml'];
      var accepts = ['application/json', 'text/xml', 'application/xml'];
      var returnType = InventoryListSearchResult;
      return this.apiClient.callApi(
        '/inventory_list_search', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Searches for inventory lists.    The query attribute specifies a complex query that can be used to narrow down the search. This is the list  of searchable attributes:    id - String  default_in_stock - boolean  description - String  on_order_inventory_enabled - boolean  status - one of {\"normal\",\"delete\"}  use_bundle_inventory_only - boolean  
     * @param {module:model/SearchRequest} body 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/InventoryListSearchResult}
     */
    this.postInventoryListSearch = function(body) {
      return this.postInventoryListSearchWithHttpInfo(body)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }
  };

  return exports;
}));
