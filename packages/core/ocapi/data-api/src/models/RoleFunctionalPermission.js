/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The RoleFunctionalPermission model module.
* @module models/RoleFunctionalPermission
* @version 20.8
*/
export default class RoleFunctionalPermission {
    /**
    * Constructs a new <code>RoleFunctionalPermission</code>.
    * Document representing a functional permission.
    * @alias module:models/RoleFunctionalPermission
    * @class
    * @param name {String} The name of the functional permission.
    * @param type {String} The permission type (\"functional\").
    */

    constructor(name, type) {
        
        
        this['name'] = name;
        this['type'] = type;
        
    }

    /**
    * Constructs a <code>RoleFunctionalPermission</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/RoleFunctionalPermission} obj Optional instance to populate.
    * @return {module:models/RoleFunctionalPermission} The populated <code>RoleFunctionalPermission</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RoleFunctionalPermission();
                        
            
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
    * The name of the functional permission.
    * @member {String} name
    */
    name = undefined;
    /**
    * The permission type (\"functional\").
    * @member {String} type
    */
    type = undefined;
    /**
    * The non domain specific value for the functional permission, e.g. ACCESS or READONLY.
    * @member {String} value
    */
    value = undefined;
    /**
    * The map of value per domain for the functional permission, e.g. ACCESS or READONLY per domain name.
    * @member {Object.<String, String>} values
    */
    values = undefined;




}
