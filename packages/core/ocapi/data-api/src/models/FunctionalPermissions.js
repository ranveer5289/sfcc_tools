/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import FunctionalPermission from './FunctionalPermission';

/**
* The FunctionalPermissions model module.
* @module models/FunctionalPermissions
* @version 20.8
*/
export default class FunctionalPermissions {
    /**
    * Constructs a new <code>FunctionalPermissions</code>.
    * Document representing the available functional permissions.
    * @alias module:models/FunctionalPermissions
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>FunctionalPermissions</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/FunctionalPermissions} obj Optional instance to populate.
    * @return {module:models/FunctionalPermissions} The populated <code>FunctionalPermissions</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FunctionalPermissions();
                        
            
            if (data.hasOwnProperty('organization')) {
                obj['organization'] = ApiClient.convertToType(data['organization'], [FunctionalPermission]);
            }
            if (data.hasOwnProperty('scopes')) {
                obj['scopes'] = ApiClient.convertToType(data['scopes'], ['String']);
            }
            if (data.hasOwnProperty('site')) {
                obj['site'] = ApiClient.convertToType(data['site'], [FunctionalPermission]);
            }
        }
        return obj;
    }

    /**
    * The collection of available organization functional permissions.
    * @member {Array.<module:models/FunctionalPermission>} organization
    */
    organization = undefined;
    /**
    * The available functional permission scopes (e.g. organization, site).
    * @member {Array.<String>} scopes
    */
    scopes = undefined;
    /**
    * The list of available site functional permissions.
    * @member {Array.<module:models/FunctionalPermission>} site
    */
    site = undefined;




}
