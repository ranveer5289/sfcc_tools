/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VariationAttributeValue from './VariationAttributeValue';

/**
* The VariationAttribute model module.
* @module models/VariationAttribute
* @version 20.8
*/
export default class VariationAttribute {
    /**
    * Constructs a new <code>VariationAttribute</code>.
    * Document representing a variation attribute.
    * @alias module:models/VariationAttribute
    * @class
    * @param attributeDefinitionId {String} The id of the requested attribute definition.
    */

    constructor(attributeDefinitionId) {
        
        
        this['attribute_definition_id'] = attributeDefinitionId;
        
    }

    /**
    * Constructs a <code>VariationAttribute</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/VariationAttribute} obj Optional instance to populate.
    * @return {module:models/VariationAttribute} The populated <code>VariationAttribute</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VariationAttribute();
                        
            
            if (data.hasOwnProperty('attribute_definition_id')) {
                obj['attribute_definition_id'] = ApiClient.convertToType(data['attribute_definition_id'], 'String');
            }
            if (data.hasOwnProperty('attribute_definition_name')) {
                obj['attribute_definition_name'] = ApiClient.convertToType(data['attribute_definition_name'], {'String': 'String'});
            }
            if (data.hasOwnProperty('default_value')) {
                obj['default_value'] = ApiClient.convertToType(data['default_value'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], {'String': 'String'});
            }
            if (data.hasOwnProperty('shared')) {
                obj['shared'] = ApiClient.convertToType(data['shared'], 'Boolean');
            }
            if (data.hasOwnProperty('slicing')) {
                obj['slicing'] = ApiClient.convertToType(data['slicing'], 'Boolean');
            }
            if (data.hasOwnProperty('values')) {
                obj['values'] = ApiClient.convertToType(data['values'], [VariationAttributeValue]);
            }
            if (data.hasOwnProperty('variation_attribute_type')) {
                obj['variation_attribute_type'] = ApiClient.convertToType(data['variation_attribute_type'], 'String');
            }
        }
        return obj;
    }

    /**
    * The id of the requested attribute definition.
    * @member {String} attribute_definition_id
    */
    attribute_definition_id = undefined;
    /**
    * The localized display name of the variation attribute definition.
    * @member {Object.<String, String>} attribute_definition_name
    */
    attribute_definition_name = undefined;
    /**
    * default variation attribute value
    * @member {String} default_value
    */
    default_value = undefined;
    /**
    * The id of the variation attribute.
    * @member {String} id
    */
    id = undefined;
    /**
    * URL that is used to get this instance
    * @member {String} link
    */
    link = undefined;
    /**
    * The localized display name of the variation attribute.
    * @member {Object.<String, String>} name
    */
    name = undefined;
    /**
    * Returns the value of attribute 'shared' if attribute is local or shared
    * @member {Boolean} shared
    */
    shared = undefined;
    /**
    * Returns the value of attribute 'slicing'.
    * @member {Boolean} slicing
    */
    slicing = undefined;
    /**
    * The sorted array of variation values. This array can be empty.
    * @member {Array.<module:models/VariationAttributeValue>} values
    */
    values = undefined;
    /**
    * variation attribute type
    * @member {module:models/VariationAttribute.VariationAttributeTypeEnum} variation_attribute_type
    */
    variation_attribute_type = undefined;



    /**
    * Allowed values for the <code>variation_attribute_type</code> property.
    * @enum {String}
    * @readonly
    */
    static VariationAttributeTypeEnum = {
        /**
         * value: "string"
         * @const
         */
        "string": "string",
        /**
         * value: "int"
         * @const
         */
        "int": "int",
        /**
         * value: "unknown"
         * @const
         */
        "unknown": "unknown"    };

}
