/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MarkupText from './MarkupText';

/**
* The SlotContent model module.
* @module models/SlotContent
* @version 20.8
*/
export default class SlotContent {
    /**
    * Constructs a new <code>SlotContent</code>.
    * Document representing the content type for a slot.
    * @alias module:models/SlotContent
    * @class
    * @param type {module:models/SlotContent.TypeEnum} The type of content in the slot.
    */

    constructor(type) {
        
        
        this['type'] = type;
        
    }

    /**
    * Constructs a <code>SlotContent</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/SlotContent} obj Optional instance to populate.
    * @return {module:models/SlotContent} The populated <code>SlotContent</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SlotContent();
                        
            
            if (data.hasOwnProperty('body')) {
                obj['body'] = ApiClient.convertToType(data['body'], {'String': MarkupText});
            }
            if (data.hasOwnProperty('category_ids')) {
                obj['category_ids'] = ApiClient.convertToType(data['category_ids'], ['String']);
            }
            if (data.hasOwnProperty('content_asset_ids')) {
                obj['content_asset_ids'] = ApiClient.convertToType(data['content_asset_ids'], ['String']);
            }
            if (data.hasOwnProperty('product_ids')) {
                obj['product_ids'] = ApiClient.convertToType(data['product_ids'], ['String']);
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * The HTML body (valid only for type 'html').
    * @member {Object.<String, module:models/MarkupText>} body
    */
    body = undefined;
    /**
    * The category ids (valid only for type 'categories').
    * @member {Array.<String>} category_ids
    */
    category_ids = undefined;
    /**
    * The content asset ids (valid only for type 'content_assets').
    * @member {Array.<String>} content_asset_ids
    */
    content_asset_ids = undefined;
    /**
    * The product ids (valid only for type 'products').
    * @member {Array.<String>} product_ids
    */
    product_ids = undefined;
    /**
    * The type of content in the slot.
    * @member {module:models/SlotContent.TypeEnum} type
    */
    type = undefined;



    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
        /**
         * value: "products"
         * @const
         */
        "products": "products",
        /**
         * value: "categories"
         * @const
         */
        "categories": "categories",
        /**
         * value: "content_assets"
         * @const
         */
        "content_assets": "content_assets",
        /**
         * value: "html"
         * @const
         */
        "html": "html",
        /**
         * value: "recommended_products"
         * @const
         */
        "recommended_products": "recommended_products"    };

}
