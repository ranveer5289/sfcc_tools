/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
* The CategoryLink model module.
* @module models/CategoryLink
* @version 20.8
*/
export default class CategoryLink {
    /**
    * Constructs a new <code>CategoryLink</code>.
    * Document representing a category link
    * @alias module:models/CategoryLink
    * @class
    */

    constructor() {
        
        
        
    }

    /**
    * Constructs a <code>CategoryLink</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:models/CategoryLink} obj Optional instance to populate.
    * @return {module:models/CategoryLink} The populated <code>CategoryLink</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CategoryLink();
                        
            
            if (data.hasOwnProperty('last_modified')) {
                obj['last_modified'] = ApiClient.convertToType(data['last_modified'], 'Date');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('position')) {
                obj['position'] = ApiClient.convertToType(data['position'], 'Number');
            }
            if (data.hasOwnProperty('source_catalog_id')) {
                obj['source_catalog_id'] = ApiClient.convertToType(data['source_catalog_id'], 'String');
            }
            if (data.hasOwnProperty('source_catalog_name')) {
                obj['source_catalog_name'] = ApiClient.convertToType(data['source_catalog_name'], {'String': 'String'});
            }
            if (data.hasOwnProperty('source_category_id')) {
                obj['source_category_id'] = ApiClient.convertToType(data['source_category_id'], 'String');
            }
            if (data.hasOwnProperty('source_category_name')) {
                obj['source_category_name'] = ApiClient.convertToType(data['source_category_name'], {'String': 'String'});
            }
            if (data.hasOwnProperty('target_catalog_id')) {
                obj['target_catalog_id'] = ApiClient.convertToType(data['target_catalog_id'], 'String');
            }
            if (data.hasOwnProperty('target_catalog_name')) {
                obj['target_catalog_name'] = ApiClient.convertToType(data['target_catalog_name'], {'String': 'String'});
            }
            if (data.hasOwnProperty('target_category_id')) {
                obj['target_category_id'] = ApiClient.convertToType(data['target_category_id'], 'String');
            }
            if (data.hasOwnProperty('target_category_name')) {
                obj['target_category_name'] = ApiClient.convertToType(data['target_category_name'], {'String': 'String'});
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
    * The date the link was last modified
    * @member {Date} last_modified
    */
    last_modified = undefined;
    /**
    * URL that is used to get this instance
    * @member {String} link
    */
    link = undefined;
    /**
    * The position in the source catalog / category for this link relative to the other links in the same category.
    * @member {Number} position
    */
    position = undefined;
    /**
    * The source catalog for the link
    * @member {String} source_catalog_id
    */
    source_catalog_id = undefined;
    /**
    * The name of the source catalog
    * @member {Object.<String, String>} source_catalog_name
    */
    source_catalog_name = undefined;
    /**
    * The source category for the link
    * @member {String} source_category_id
    */
    source_category_id = undefined;
    /**
    * The name of the source category
    * @member {Object.<String, String>} source_category_name
    */
    source_category_name = undefined;
    /**
    * The target category for the link
    * @member {String} target_catalog_id
    */
    target_catalog_id = undefined;
    /**
    * The name of the target catalog
    * @member {Object.<String, String>} target_catalog_name
    */
    target_catalog_name = undefined;
    /**
    * The target category for the link
    * @member {String} target_category_id
    */
    target_category_id = undefined;
    /**
    * The name of the target category
    * @member {Object.<String, String>} target_category_name
    */
    target_category_name = undefined;
    /**
    * The link type
    * @member {module:models/CategoryLink.TypeEnum} type
    */
    type = undefined;



    /**
    * Allowed values for the <code>type</code> property.
    * @enum {String}
    * @readonly
    */
    static TypeEnum = {
        /**
         * value: "other"
         * @const
         */
        "other": "other",
        /**
         * value: "accessories"
         * @const
         */
        "accessories": "accessories",
        /**
         * value: "cross_selling"
         * @const
         */
        "cross_selling": "cross_selling",
        /**
         * value: "up_selling"
         * @const
         */
        "up_selling": "up_selling",
        /**
         * value: "spare_parts"
         * @const
         */
        "spare_parts": "spare_parts"    };

}
