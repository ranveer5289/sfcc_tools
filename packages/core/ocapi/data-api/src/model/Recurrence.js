/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/TimeOfDay'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./TimeOfDay'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.Recurrence = factory(root.DataApi.ApiClient, root.DataApi.TimeOfDay);
  }
}(this, function(ApiClient, TimeOfDay) {
  'use strict';



  /**
   * The Recurrence model module.
   * @module model/Recurrence
   * @version 20.8
   */

  /**
   * Constructs a new <code>Recurrence</code>.
   * Document representing a schedule recurrence.
   * @alias module:model/Recurrence
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Recurrence</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Recurrence} obj Optional instance to populate.
   * @return {module:model/Recurrence} The populated <code>Recurrence</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('day_of_week')) {
        obj['day_of_week'] = ApiClient.convertToType(data['day_of_week'], ['String']);
      }
      if (data.hasOwnProperty('time_of_day')) {
        obj['time_of_day'] = TimeOfDay.constructFromObject(data['time_of_day']);
      }
    }
    return obj;
  }

  /**
   * The days of week for recurrence.
   * @member {Array.<module:model/Recurrence.DayOfWeekEnum>} day_of_week
   */
  exports.prototype['day_of_week'] = undefined;
  /**
   * @member {module:model/TimeOfDay} time_of_day
   */
  exports.prototype['time_of_day'] = undefined;


  /**
   * Allowed values for the <code>dayOfWeek</code> property.
   * @enum {String}
   * @readonly
   */
  exports.DayOfWeekEnum = {
    /**
     * value: "monday"
     * @const
     */
    "monday": "monday",
    /**
     * value: "tuesday"
     * @const
     */
    "tuesday": "tuesday",
    /**
     * value: "wednesday"
     * @const
     */
    "wednesday": "wednesday",
    /**
     * value: "thursday"
     * @const
     */
    "thursday": "thursday",
    /**
     * value: "friday"
     * @const
     */
    "friday": "friday",
    /**
     * value: "saturday"
     * @const
     */
    "saturday": "saturday",
    /**
     * value: "sunday"
     * @const
     */
    "sunday": "sunday"  };


  return exports;
}));


