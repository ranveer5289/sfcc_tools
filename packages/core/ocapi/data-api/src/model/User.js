/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.User = factory(root.DataApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The User model module.
   * @module model/User
   * @version 20.8
   */

  /**
   * Constructs a new <code>User</code>.
   * Document representing a user.
   * @alias module:model/User
   * @class
   * @param email {String} The email address.
   * @param lastName {String} The last name.
   */
  var exports = function(email, lastName) {
    var _this = this;

    _this['email'] = email;
    _this['last_name'] = lastName;
  };

  /**
   * Constructs a <code>User</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/User} obj Optional instance to populate.
   * @return {module:model/User} The populated <code>User</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('disabled')) {
        obj['disabled'] = ApiClient.convertToType(data['disabled'], 'Boolean');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('external_id')) {
        obj['external_id'] = ApiClient.convertToType(data['external_id'], 'String');
      }
      if (data.hasOwnProperty('first_name')) {
        obj['first_name'] = ApiClient.convertToType(data['first_name'], 'String');
      }
      if (data.hasOwnProperty('last_login_date')) {
        obj['last_login_date'] = ApiClient.convertToType(data['last_login_date'], 'Date');
      }
      if (data.hasOwnProperty('last_name')) {
        obj['last_name'] = ApiClient.convertToType(data['last_name'], 'String');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('locked')) {
        obj['locked'] = ApiClient.convertToType(data['locked'], 'Boolean');
      }
      if (data.hasOwnProperty('login')) {
        obj['login'] = ApiClient.convertToType(data['login'], 'String');
      }
      if (data.hasOwnProperty('password')) {
        obj['password'] = ApiClient.convertToType(data['password'], 'String');
      }
      if (data.hasOwnProperty('password_expiration_date')) {
        obj['password_expiration_date'] = ApiClient.convertToType(data['password_expiration_date'], 'Date');
      }
      if (data.hasOwnProperty('password_modification_date')) {
        obj['password_modification_date'] = ApiClient.convertToType(data['password_modification_date'], 'Date');
      }
      if (data.hasOwnProperty('preferred_data_locale')) {
        obj['preferred_data_locale'] = ApiClient.convertToType(data['preferred_data_locale'], 'String');
      }
      if (data.hasOwnProperty('preferred_ui_locale')) {
        obj['preferred_ui_locale'] = ApiClient.convertToType(data['preferred_ui_locale'], 'String');
      }
      if (data.hasOwnProperty('roles')) {
        obj['roles'] = ApiClient.convertToType(data['roles'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Flag whether the user is disabled.
   * @member {Boolean} disabled
   */
  exports.prototype['disabled'] = undefined;
  /**
   * The email address.
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * The external id. This attribute is only valid when the user uses centralized authentication.
   * @member {String} external_id
   */
  exports.prototype['external_id'] = undefined;
  /**
   * The first name.
   * @member {String} first_name
   */
  exports.prototype['first_name'] = undefined;
  /**
   * Last login of the user.
   * @member {Date} last_login_date
   */
  exports.prototype['last_login_date'] = undefined;
  /**
   * The last name.
   * @member {String} last_name
   */
  exports.prototype['last_name'] = undefined;
  /**
   * URL that is used to get this instance.  This property is computed and cannot be modified.
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * Flag whether the user is locked.
   * @member {Boolean} locked
   */
  exports.prototype['locked'] = undefined;
  /**
   * The user login.
   * @member {String} login
   */
  exports.prototype['login'] = undefined;
  /**
   * The password. This attribute is only used to set the password upon user creation.  This attribute is only valid when the user does not use centralized authentication.
   * @member {String} password
   */
  exports.prototype['password'] = undefined;
  /**
   * The user password expiration time
   * @member {Date} password_expiration_date
   */
  exports.prototype['password_expiration_date'] = undefined;
  /**
   * The time, where the password was last modified
   * @member {Date} password_modification_date
   */
  exports.prototype['password_modification_date'] = undefined;
  /**
   * The effective preferred data locale of the user. A locale is only considered if the user has at least read  permission on the locale.
   * @member {String} preferred_data_locale
   */
  exports.prototype['preferred_data_locale'] = undefined;
  /**
   * The preferred UI locale of the user.
   * @member {String} preferred_ui_locale
   */
  exports.prototype['preferred_ui_locale'] = undefined;
  /**
   * List of role ids the user is assigned to.
   * @member {Array.<String>} roles
   */
  exports.prototype['roles'] = undefined;



  return exports;
}));


