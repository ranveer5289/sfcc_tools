/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.ContentFolderAssignment = factory(root.DataApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The ContentFolderAssignment model module.
   * @module model/ContentFolderAssignment
   * @version 20.4
   */

  /**
   * Constructs a new <code>ContentFolderAssignment</code>.
   * Document representing a content folder assignment.
   * @alias module:model/ContentFolderAssignment
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ContentFolderAssignment</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ContentFolderAssignment} obj Optional instance to populate.
   * @return {module:model/ContentFolderAssignment} The populated <code>ContentFolderAssignment</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('content_id')) {
        obj['content_id'] = ApiClient.convertToType(data['content_id'], 'String');
      }
      if (data.hasOwnProperty('content_link')) {
        obj['content_link'] = ApiClient.convertToType(data['content_link'], 'String');
      }
      if (data.hasOwnProperty('default')) {
        obj['default'] = ApiClient.convertToType(data['default'], 'Boolean');
      }
      if (data.hasOwnProperty('folder_id')) {
        obj['folder_id'] = ApiClient.convertToType(data['folder_id'], 'String');
      }
      if (data.hasOwnProperty('folder_link')) {
        obj['folder_link'] = ApiClient.convertToType(data['folder_link'], 'String');
      }
      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Number');
      }
    }
    return obj;
  }

  /**
   * The content id.
   * @member {String} content_id
   */
  exports.prototype['content_id'] = undefined;
  /**
   * The content link.
   * @member {String} content_link
   */
  exports.prototype['content_link'] = undefined;
  /**
   * A flag indicating whether the assignment is the default one.
   * @member {Boolean} default
   */
  exports.prototype['default'] = undefined;
  /**
   * The folder id.
   * @member {String} folder_id
   */
  exports.prototype['folder_id'] = undefined;
  /**
   * The folder link.
   * @member {String} folder_link
   */
  exports.prototype['folder_link'] = undefined;
  /**
   * The position of the content asset in the folder.
   * @member {Number} position
   */
  exports.prototype['position'] = undefined;



  return exports;
}));


