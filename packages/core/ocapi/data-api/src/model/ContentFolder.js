/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MediaFile'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MediaFile'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.ContentFolder = factory(root.DataApi.ApiClient, root.DataApi.MediaFile);
  }
}(this, function(ApiClient, MediaFile) {
  'use strict';



  /**
   * The ContentFolder model module.
   * @module model/ContentFolder
   * @version 20.8
   */

  /**
   * Constructs a new <code>ContentFolder</code>.
   * Document representing a content folder.
   * @alias module:model/ContentFolder
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ContentFolder</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ContentFolder} obj Optional instance to populate.
   * @return {module:model/ContentFolder} The populated <code>ContentFolder</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('c_customCSSFile')) {
        obj['c_customCSSFile'] = MediaFile.constructFromObject(data['c_customCSSFile']);
      }
      if (data.hasOwnProperty('creation_date')) {
        obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Date');
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], {'String': 'String'});
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('last_modified')) {
        obj['last_modified'] = ApiClient.convertToType(data['last_modified'], 'Date');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('online')) {
        obj['online'] = ApiClient.convertToType(data['online'], 'Boolean');
      }
      if (data.hasOwnProperty('page_description')) {
        obj['page_description'] = ApiClient.convertToType(data['page_description'], {'String': 'String'});
      }
      if (data.hasOwnProperty('page_keywords')) {
        obj['page_keywords'] = ApiClient.convertToType(data['page_keywords'], {'String': 'String'});
      }
      if (data.hasOwnProperty('page_title')) {
        obj['page_title'] = ApiClient.convertToType(data['page_title'], {'String': 'String'});
      }
      if (data.hasOwnProperty('page_url')) {
        obj['page_url'] = ApiClient.convertToType(data['page_url'], {'String': 'String'});
      }
      if (data.hasOwnProperty('parent_folder_id')) {
        obj['parent_folder_id'] = ApiClient.convertToType(data['parent_folder_id'], 'String');
      }
      if (data.hasOwnProperty('parent_link')) {
        obj['parent_link'] = ApiClient.convertToType(data['parent_link'], 'String');
      }
      if (data.hasOwnProperty('sub_folders_link')) {
        obj['sub_folders_link'] = ApiClient.convertToType(data['sub_folders_link'], 'String');
      }
      if (data.hasOwnProperty('template')) {
        obj['template'] = ApiClient.convertToType(data['template'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/MediaFile} c_customCSSFile
   */
  exports.prototype['c_customCSSFile'] = undefined;
  /**
   * Returns the value of attribute 'creationDate'.
   * @member {Date} creation_date
   */
  exports.prototype['creation_date'] = undefined;
  /**
   * The localized content folder description.
   * @member {Object.<String, String>} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The id of the content folder.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Returns the value of attribute 'lastModified'.
   * @member {Date} last_modified
   */
  exports.prototype['last_modified'] = undefined;
  /**
   * The link to the content folder resource.
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * The localized content folder name.
   * @member {Object.<String, String>} name
   */
  exports.prototype['name'] = undefined;
  /**
   * A flag indicating whether the folder in online (default is false).
   * @member {Boolean} online
   */
  exports.prototype['online'] = undefined;
  /**
   * The localized content folder page description.
   * @member {Object.<String, String>} page_description
   */
  exports.prototype['page_description'] = undefined;
  /**
   * The localized content folder page keywords.
   * @member {Object.<String, String>} page_keywords
   */
  exports.prototype['page_keywords'] = undefined;
  /**
   * The localized content folder page title.
   * @member {Object.<String, String>} page_title
   */
  exports.prototype['page_title'] = undefined;
  /**
   * The localized content folder page URL.
   * @member {Object.<String, String>} page_url
   */
  exports.prototype['page_url'] = undefined;
  /**
   * The id of the parent content folder.
   * @member {String} parent_folder_id
   */
  exports.prototype['parent_folder_id'] = undefined;
  /**
   * The URL to the parent content folder.
   * @member {String} parent_link
   */
  exports.prototype['parent_link'] = undefined;
  /**
   * The URL to list the content sub-folders.
   * @member {String} sub_folders_link
   */
  exports.prototype['sub_folders_link'] = undefined;
  /**
   * The rendering template.
   * @member {String} template
   */
  exports.prototype['template'] = undefined;



  return exports;
}));


