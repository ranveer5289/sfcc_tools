/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.CodeVersion = factory(root.DataApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The CodeVersion model module.
   * @module model/CodeVersion
   * @version 20.8
   */

  /**
   * Constructs a new <code>CodeVersion</code>.
   * Document representing a code version
   * @alias module:model/CodeVersion
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>CodeVersion</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CodeVersion} obj Optional instance to populate.
   * @return {module:model/CodeVersion} The populated <code>CodeVersion</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('activation_time')) {
        obj['activation_time'] = ApiClient.convertToType(data['activation_time'], 'Date');
      }
      if (data.hasOwnProperty('active')) {
        obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
      }
      if (data.hasOwnProperty('cartridges')) {
        obj['cartridges'] = ApiClient.convertToType(data['cartridges'], ['String']);
      }
      if (data.hasOwnProperty('compatibility_mode')) {
        obj['compatibility_mode'] = ApiClient.convertToType(data['compatibility_mode'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('last_modification_time')) {
        obj['last_modification_time'] = ApiClient.convertToType(data['last_modification_time'], 'Date');
      }
      if (data.hasOwnProperty('rollback')) {
        obj['rollback'] = ApiClient.convertToType(data['rollback'], 'Boolean');
      }
      if (data.hasOwnProperty('total_size')) {
        obj['total_size'] = ApiClient.convertToType(data['total_size'], 'Number');
      }
      if (data.hasOwnProperty('web_dav_url')) {
        obj['web_dav_url'] = ApiClient.convertToType(data['web_dav_url'], 'String');
      }
    }
    return obj;
  }

  /**
   * The code version activation time.
   * @member {Date} activation_time
   */
  exports.prototype['activation_time'] = undefined;
  /**
   * Use this method to determine, if this code version is currently active.
   * @member {Boolean} active
   */
  exports.prototype['active'] = undefined;
  /**
   * A list containing the names of all cartridges participating in this code version.
   * @member {Array.<String>} cartridges
   */
  exports.prototype['cartridges'] = undefined;
  /**
   * The code version compatibility mode.
   * @member {String} compatibility_mode
   */
  exports.prototype['compatibility_mode'] = undefined;
  /**
   * The code version id.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The last time, when the code version was changed.
   * @member {Date} last_modification_time
   */
  exports.prototype['last_modification_time'] = undefined;
  /**
   * Use this method to determine, if this code version is the current rollback version.
   * @member {Boolean} rollback
   */
  exports.prototype['rollback'] = undefined;
  /**
   * Returns the total size of the file system content of this code version in bytes.
   * @member {Number} total_size
   */
  exports.prototype['total_size'] = undefined;
  /**
   * Returns the HTTPS based WebDAV URL that can be used to access the code version resources.
   * @member {String} web_dav_url
   */
  exports.prototype['web_dav_url'] = undefined;



  return exports;
}));


