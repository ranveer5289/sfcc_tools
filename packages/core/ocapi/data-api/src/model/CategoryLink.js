/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.CategoryLink = factory(root.DataApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The CategoryLink model module.
   * @module model/CategoryLink
   * @version 20.4
   */

  /**
   * Constructs a new <code>CategoryLink</code>.
   * Document representing a category link
   * @alias module:model/CategoryLink
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>CategoryLink</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/CategoryLink} obj Optional instance to populate.
   * @return {module:model/CategoryLink} The populated <code>CategoryLink</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('last_modified')) {
        obj['last_modified'] = ApiClient.convertToType(data['last_modified'], 'Date');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('position')) {
        obj['position'] = ApiClient.convertToType(data['position'], 'Number');
      }
      if (data.hasOwnProperty('source_catalog_id')) {
        obj['source_catalog_id'] = ApiClient.convertToType(data['source_catalog_id'], 'String');
      }
      if (data.hasOwnProperty('source_catalog_name')) {
        obj['source_catalog_name'] = ApiClient.convertToType(data['source_catalog_name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('source_category_id')) {
        obj['source_category_id'] = ApiClient.convertToType(data['source_category_id'], 'String');
      }
      if (data.hasOwnProperty('source_category_name')) {
        obj['source_category_name'] = ApiClient.convertToType(data['source_category_name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('target_catalog_id')) {
        obj['target_catalog_id'] = ApiClient.convertToType(data['target_catalog_id'], 'String');
      }
      if (data.hasOwnProperty('target_catalog_name')) {
        obj['target_catalog_name'] = ApiClient.convertToType(data['target_catalog_name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('target_category_id')) {
        obj['target_category_id'] = ApiClient.convertToType(data['target_category_id'], 'String');
      }
      if (data.hasOwnProperty('target_category_name')) {
        obj['target_category_name'] = ApiClient.convertToType(data['target_category_name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
    }
    return obj;
  }

  /**
   * The date the link was last modified
   * @member {Date} last_modified
   */
  exports.prototype['last_modified'] = undefined;
  /**
   * URL that is used to get this instance
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * The position in the source catalog / category for this link relative to the other links in the same category.
   * @member {Number} position
   */
  exports.prototype['position'] = undefined;
  /**
   * The source catalog for the link
   * @member {String} source_catalog_id
   */
  exports.prototype['source_catalog_id'] = undefined;
  /**
   * The name of the source catalog
   * @member {Object.<String, String>} source_catalog_name
   */
  exports.prototype['source_catalog_name'] = undefined;
  /**
   * The source category for the link
   * @member {String} source_category_id
   */
  exports.prototype['source_category_id'] = undefined;
  /**
   * The name of the source category
   * @member {Object.<String, String>} source_category_name
   */
  exports.prototype['source_category_name'] = undefined;
  /**
   * The target category for the link
   * @member {String} target_catalog_id
   */
  exports.prototype['target_catalog_id'] = undefined;
  /**
   * The name of the target catalog
   * @member {Object.<String, String>} target_catalog_name
   */
  exports.prototype['target_catalog_name'] = undefined;
  /**
   * The target category for the link
   * @member {String} target_category_id
   */
  exports.prototype['target_category_id'] = undefined;
  /**
   * The name of the target category
   * @member {Object.<String, String>} target_category_name
   */
  exports.prototype['target_category_name'] = undefined;
  /**
   * The link type
   * @member {module:model/CategoryLink.TypeEnum} type
   */
  exports.prototype['type'] = undefined;


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: "other"
     * @const
     */
    "other": "other",
    /**
     * value: "accessories"
     * @const
     */
    "accessories": "accessories",
    /**
     * value: "cross_selling"
     * @const
     */
    "cross_selling": "cross_selling",
    /**
     * value: "up_selling"
     * @const
     */
    "up_selling": "up_selling",
    /**
     * value: "spare_parts"
     * @const
     */
    "spare_parts": "spare_parts"  };


  return exports;
}));


