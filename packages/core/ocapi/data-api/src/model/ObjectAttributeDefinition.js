/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ObjectAttributeValueDefinition'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ObjectAttributeValueDefinition'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.ObjectAttributeDefinition = factory(root.DataApi.ApiClient, root.DataApi.ObjectAttributeValueDefinition);
  }
}(this, function(ApiClient, ObjectAttributeValueDefinition) {
  'use strict';



  /**
   * The ObjectAttributeDefinition model module.
   * @module model/ObjectAttributeDefinition
   * @version 20.8
   */

  /**
   * Constructs a new <code>ObjectAttributeDefinition</code>.
   * Document representing a attribute definition
   * @alias module:model/ObjectAttributeDefinition
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>ObjectAttributeDefinition</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ObjectAttributeDefinition} obj Optional instance to populate.
   * @return {module:model/ObjectAttributeDefinition} The populated <code>ObjectAttributeDefinition</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('default_value')) {
        obj['default_value'] = ObjectAttributeValueDefinition.constructFromObject(data['default_value']);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], {'String': 'String'});
      }
      if (data.hasOwnProperty('display_name')) {
        obj['display_name'] = ApiClient.convertToType(data['display_name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('effective_id')) {
        obj['effective_id'] = ApiClient.convertToType(data['effective_id'], 'String');
      }
      if (data.hasOwnProperty('externally_defined')) {
        obj['externally_defined'] = ApiClient.convertToType(data['externally_defined'], 'Boolean');
      }
      if (data.hasOwnProperty('externally_managed')) {
        obj['externally_managed'] = ApiClient.convertToType(data['externally_managed'], 'Boolean');
      }
      if (data.hasOwnProperty('field_height')) {
        obj['field_height'] = ApiClient.convertToType(data['field_height'], 'Number');
      }
      if (data.hasOwnProperty('field_length')) {
        obj['field_length'] = ApiClient.convertToType(data['field_length'], 'Number');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('key')) {
        obj['key'] = ApiClient.convertToType(data['key'], 'Boolean');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('localizable')) {
        obj['localizable'] = ApiClient.convertToType(data['localizable'], 'Boolean');
      }
      if (data.hasOwnProperty('mandatory')) {
        obj['mandatory'] = ApiClient.convertToType(data['mandatory'], 'Boolean');
      }
      if (data.hasOwnProperty('max_value')) {
        obj['max_value'] = ApiClient.convertToType(data['max_value'], 'Number');
      }
      if (data.hasOwnProperty('min_length')) {
        obj['min_length'] = ApiClient.convertToType(data['min_length'], 'Number');
      }
      if (data.hasOwnProperty('min_value')) {
        obj['min_value'] = ApiClient.convertToType(data['min_value'], 'Number');
      }
      if (data.hasOwnProperty('multi_value_type')) {
        obj['multi_value_type'] = ApiClient.convertToType(data['multi_value_type'], 'Boolean');
      }
      if (data.hasOwnProperty('order_required')) {
        obj['order_required'] = ApiClient.convertToType(data['order_required'], 'Boolean');
      }
      if (data.hasOwnProperty('queryable')) {
        obj['queryable'] = ApiClient.convertToType(data['queryable'], 'Boolean');
      }
      if (data.hasOwnProperty('read_only')) {
        obj['read_only'] = ApiClient.convertToType(data['read_only'], 'Boolean');
      }
      if (data.hasOwnProperty('regular_expression')) {
        obj['regular_expression'] = ApiClient.convertToType(data['regular_expression'], 'String');
      }
      if (data.hasOwnProperty('requires_encoding')) {
        obj['requires_encoding'] = ApiClient.convertToType(data['requires_encoding'], 'Boolean');
      }
      if (data.hasOwnProperty('scale')) {
        obj['scale'] = ApiClient.convertToType(data['scale'], 'Number');
      }
      if (data.hasOwnProperty('searchable')) {
        obj['searchable'] = ApiClient.convertToType(data['searchable'], 'Boolean');
      }
      if (data.hasOwnProperty('set_value_type')) {
        obj['set_value_type'] = ApiClient.convertToType(data['set_value_type'], 'Boolean');
      }
      if (data.hasOwnProperty('site_specific')) {
        obj['site_specific'] = ApiClient.convertToType(data['site_specific'], 'Boolean');
      }
      if (data.hasOwnProperty('system')) {
        obj['system'] = ApiClient.convertToType(data['system'], 'Boolean');
      }
      if (data.hasOwnProperty('unit')) {
        obj['unit'] = ApiClient.convertToType(data['unit'], {'String': 'String'});
      }
      if (data.hasOwnProperty('value_definitions')) {
        obj['value_definitions'] = ApiClient.convertToType(data['value_definitions'], [ObjectAttributeValueDefinition]);
      }
      if (data.hasOwnProperty('value_type')) {
        obj['value_type'] = ApiClient.convertToType(data['value_type'], 'String');
      }
      if (data.hasOwnProperty('visible')) {
        obj['visible'] = ApiClient.convertToType(data['visible'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/ObjectAttributeValueDefinition} default_value
   */
  exports.prototype['default_value'] = undefined;
  /**
   * The localized description of the attribute.
   * @member {Object.<String, String>} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The localized name presented to the user in forms.
   * @member {Object.<String, String>} display_name
   */
  exports.prototype['display_name'] = undefined;
  /**
   * The effective ID, which is c_id if the attribute is custom, and just the id otherwise. It is read only.
   * @member {String} effective_id
   */
  exports.prototype['effective_id'] = undefined;
  /**
   * Flag indicating if this attribute is externally defined.
   * @member {Boolean} externally_defined
   */
  exports.prototype['externally_defined'] = undefined;
  /**
   * Flag indicating if this attribute is externally managed.
   * @member {Boolean} externally_managed
   */
  exports.prototype['externally_managed'] = undefined;
  /**
   * The height of the field for this attribute in the editor.
   * @member {Number} field_height
   */
  exports.prototype['field_height'] = undefined;
  /**
   * The length of the field for this attribute in the editor.
   * @member {Number} field_length
   */
  exports.prototype['field_length'] = undefined;
  /**
   * The user supplied ID of the attribute.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Flag indicating if this is a key attribute.
   * @member {Boolean} key
   */
  exports.prototype['key'] = undefined;
  /**
   * The URL that is used to get this instance.  Value is computed and read-only.
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * Flag indicating if this attribute can be localized.
   * @member {Boolean} localizable
   */
  exports.prototype['localizable'] = undefined;
  /**
   * Flag indicating if a value is mandatory for the attribute.
   * @member {Boolean} mandatory
   */
  exports.prototype['mandatory'] = undefined;
  /**
   * The maximum possible value for this attribute.
   * @member {Number} max_value
   */
  exports.prototype['max_value'] = undefined;
  /**
   * The minimum length of the field for this attribute.
   * @member {Number} min_length
   */
  exports.prototype['min_length'] = undefined;
  /**
   * The minimum possible value for this attribute.
   * @member {Number} min_value
   */
  exports.prototype['min_value'] = undefined;
  /**
   * True if the attribute can have multiple values.  Attributes of the following types are multi-value capable:    set_of_int  set_of_number  set_of_string    Additionally, attributes of the following types can be multi-value  enabled:    enum_of_int  enum_of_string  
   * @member {Boolean} multi_value_type
   */
  exports.prototype['multi_value_type'] = undefined;
  /**
   * Flag indicating if this attribute is required for order of the attribute model's product. The set of these can be used  in order line items.
   * @member {Boolean} order_required
   */
  exports.prototype['order_required'] = undefined;
  /**
   * Returns true if the attribute definition is explicitly marked queryable. If no explicit queryable is found  and the attribute value type belongs to a queryable type, true is returned too. In all other cases false is returned.  Value is computed and read-only.
   * @member {Boolean} queryable
   */
  exports.prototype['queryable'] = undefined;
  /**
   * Flag indicating if this attribute is read-only. It is read only.
   * @member {Boolean} read_only
   */
  exports.prototype['read_only'] = undefined;
  /**
   * A regular expression that defines the legal values for this attribute.
   * @member {String} regular_expression
   */
  exports.prototype['regular_expression'] = undefined;
  /**
   * Flag indicating if this attribute can be encoded using the encoding=\"off\" flag in ISML templates. It is read only.
   * @member {Boolean} requires_encoding
   */
  exports.prototype['requires_encoding'] = undefined;
  /**
   * The minimum number of fraction digits for a value of this attribute.
   * @member {Number} scale
   */
  exports.prototype['scale'] = undefined;
  /**
   * Flag indicating if this attribute is searchable.
   * @member {Boolean} searchable
   */
  exports.prototype['searchable'] = undefined;
  /**
   * Flag indicating if this attribute is of type 'Set of'. It is read only.
   * @member {Boolean} set_value_type
   */
  exports.prototype['set_value_type'] = undefined;
  /**
   * Flag indicating if this attribute is site-specific.
   * @member {Boolean} site_specific
   */
  exports.prototype['site_specific'] = undefined;
  /**
   * Flag indicating if this attribute is a system attribute.
   * @member {Boolean} system
   */
  exports.prototype['system'] = undefined;
  /**
   * The unit of measure for this attribute.
   * @member {Object.<String, String>} unit
   */
  exports.prototype['unit'] = undefined;
  /**
   * A set of values that are possible for this attribute. It is read only.
   * @member {Array.<module:model/ObjectAttributeValueDefinition>} value_definitions
   */
  exports.prototype['value_definitions'] = undefined;
  /**
   * The type of this attribute.
   * @member {module:model/ObjectAttributeDefinition.ValueTypeEnum} value_type
   */
  exports.prototype['value_type'] = undefined;
  /**
   * Flag indicating if this attribute is visible.
   * @member {Boolean} visible
   */
  exports.prototype['visible'] = undefined;


  /**
   * Allowed values for the <code>value_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ValueTypeEnum = {
    /**
     * value: "string"
     * @const
     */
    "string": "string",
    /**
     * value: "int"
     * @const
     */
    "int": "int",
    /**
     * value: "double"
     * @const
     */
    "double": "double",
    /**
     * value: "text"
     * @const
     */
    "text": "text",
    /**
     * value: "html"
     * @const
     */
    "html": "html",
    /**
     * value: "date"
     * @const
     */
    "date": "date",
    /**
     * value: "image"
     * @const
     */
    "image": "image",
    /**
     * value: "boolean"
     * @const
     */
    "boolean": "boolean",
    /**
     * value: "money"
     * @const
     */
    "money": "money",
    /**
     * value: "quantity"
     * @const
     */
    "quantity": "quantity",
    /**
     * value: "datetime"
     * @const
     */
    "datetime": "datetime",
    /**
     * value: "email"
     * @const
     */
    "email": "email",
    /**
     * value: "password"
     * @const
     */
    "password": "password",
    /**
     * value: "set_of_string"
     * @const
     */
    "set_of_string": "set_of_string",
    /**
     * value: "set_of_int"
     * @const
     */
    "set_of_int": "set_of_int",
    /**
     * value: "set_of_double"
     * @const
     */
    "set_of_double": "set_of_double",
    /**
     * value: "enum_of_string"
     * @const
     */
    "enum_of_string": "enum_of_string",
    /**
     * value: "enum_of_int"
     * @const
     */
    "enum_of_int": "enum_of_int",
    /**
     * value: "unknown"
     * @const
     */
    "unknown": "unknown"  };


  return exports;
}));


