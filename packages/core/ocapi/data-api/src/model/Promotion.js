/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/MarkupText', 'model/PromotionAssignmentInformation', 'model/Tag'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./MarkupText'), require('./PromotionAssignmentInformation'), require('./Tag'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.Promotion = factory(root.DataApi.ApiClient, root.DataApi.MarkupText, root.DataApi.PromotionAssignmentInformation, root.DataApi.Tag);
  }
}(this, function(ApiClient, MarkupText, PromotionAssignmentInformation, Tag) {
  'use strict';



  /**
   * The Promotion model module.
   * @module model/Promotion
   * @version 20.8
   */

  /**
   * Constructs a new <code>Promotion</code>.
   * Document representing a promotion. Unless otherwise stated, attributes of this document are not supported when using  the Open Commerce API to update multiple promotions at once.
   * @alias module:model/Promotion
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Promotion</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Promotion} obj Optional instance to populate.
   * @return {module:model/Promotion} The populated <code>Promotion</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('archived')) {
        obj['archived'] = ApiClient.convertToType(data['archived'], 'Boolean');
      }
      if (data.hasOwnProperty('assignment_information')) {
        obj['assignment_information'] = PromotionAssignmentInformation.constructFromObject(data['assignment_information']);
      }
      if (data.hasOwnProperty('callout_msg')) {
        obj['callout_msg'] = ApiClient.convertToType(data['callout_msg'], {'String': MarkupText});
      }
      if (data.hasOwnProperty('creation_date')) {
        obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Date');
      }
      if (data.hasOwnProperty('currency_code')) {
        obj['currency_code'] = ApiClient.convertToType(data['currency_code'], 'String');
      }
      if (data.hasOwnProperty('disable_globally_excluded')) {
        obj['disable_globally_excluded'] = ApiClient.convertToType(data['disable_globally_excluded'], 'Boolean');
      }
      if (data.hasOwnProperty('enabled')) {
        obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
      }
      if (data.hasOwnProperty('exclusivity')) {
        obj['exclusivity'] = ApiClient.convertToType(data['exclusivity'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('last_modified')) {
        obj['last_modified'] = ApiClient.convertToType(data['last_modified'], 'Date');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('promotion_class')) {
        obj['promotion_class'] = ApiClient.convertToType(data['promotion_class'], 'String');
      }
      if (data.hasOwnProperty('tags')) {
        obj['tags'] = ApiClient.convertToType(data['tags'], [Tag]);
      }
    }
    return obj;
  }

  /**
   * Determines whether or not this promotion is archived. This attribute is allowed to be updated when using the Open  Commerce API to update multiple promotions at once.
   * @member {Boolean} archived
   */
  exports.prototype['archived'] = undefined;
  /**
   * @member {module:model/PromotionAssignmentInformation} assignment_information
   */
  exports.prototype['assignment_information'] = undefined;
  /**
   * The localized callout message of the promotion.
   * @member {Object.<String, module:model/MarkupText>} callout_msg
   */
  exports.prototype['callout_msg'] = undefined;
  /**
   * Returns the value of attribute 'creationDate'.
   * @member {Date} creation_date
   */
  exports.prototype['creation_date'] = undefined;
  /**
   * The ISO 4217 mnemonic code of the currency this promotion is restricted to. If not populated, then there is no  currency restriction on the promotion.
   * @member {String} currency_code
   */
  exports.prototype['currency_code'] = undefined;
  /**
   * Determines whether or not this promotion ignores the global product exclusions for promotions.
   * @member {Boolean} disable_globally_excluded
   */
  exports.prototype['disable_globally_excluded'] = undefined;
  /**
   * Determines whether or not this promotion is enabled. This attribute is allowed to be updated when using the Open  Commerce API to update multiple promotions at once.
   * @member {Boolean} enabled
   */
  exports.prototype['enabled'] = undefined;
  /**
   * Determines if the promotion can be combined with other promotions of the same promotion class or if it cannot be  combined with any other promotions. This attribute is allowed to be updated when using the Open Commerce API to  update multiple promotions at once.
   * @member {module:model/Promotion.ExclusivityEnum} exclusivity
   */
  exports.prototype['exclusivity'] = undefined;
  /**
   * The id for the promotion.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * Returns the value of attribute 'lastModified'.
   * @member {Date} last_modified
   */
  exports.prototype['last_modified'] = undefined;
  /**
   * A URL that is used to get the details of this promotion.
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * The user supplied name of this promotion, which can be localized
   * @member {Object.<String, String>} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The class of the promotion. If the promotion class is modified, then the promotion rule and all of its values,  such as whether or not to disable global product exclusions, will be reset.
   * @member {module:model/Promotion.PromotionClassEnum} promotion_class
   */
  exports.prototype['promotion_class'] = undefined;
  /**
   * Returns the list of tags assigned to this promotion. If used to set the tags on a promotion, the promotion will  only have the tags passed in the input. Any existing tags will be removed.
   * @member {Array.<module:model/Tag>} tags
   */
  exports.prototype['tags'] = undefined;


  /**
   * Allowed values for the <code>exclusivity</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ExclusivityEnum = {
    /**
     * value: "no"
     * @const
     */
    "no": "no",
    /**
     * value: "class"
     * @const
     */
    "class": "class",
    /**
     * value: "global"
     * @const
     */
    "global": "global"  };

  /**
   * Allowed values for the <code>promotion_class</code> property.
   * @enum {String}
   * @readonly
   */
  exports.PromotionClassEnum = {
    /**
     * value: "product"
     * @const
     */
    "product": "product",
    /**
     * value: "shipping"
     * @const
     */
    "shipping": "shipping",
    /**
     * value: "order"
     * @const
     */
    "order": "order"  };


  return exports;
}));


