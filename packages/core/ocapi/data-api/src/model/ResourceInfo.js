/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/ResourceObject'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./ResourceObject'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.ResourceInfo = factory(root.DataApi.ApiClient, root.DataApi.ResourceObject);
  }
}(this, function(ApiClient, ResourceObject) {
  'use strict';



  /**
   * The ResourceInfo model module.
   * @module model/ResourceInfo
   * @version 20.4
   */

  /**
   * Constructs a new <code>ResourceInfo</code>.
   * @alias module:model/ResourceInfo
   * @class
   * @param apiType {module:model/ResourceInfo.ApiTypeEnum} API Type
   * @param resources {Array.<module:model/ResourceObject>} An array of resources
   */
  var exports = function(apiType, resources) {
    var _this = this;

    _this['api_type'] = apiType;
    _this['resources'] = resources;
  };

  /**
   * Constructs a <code>ResourceInfo</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ResourceInfo} obj Optional instance to populate.
   * @return {module:model/ResourceInfo} The populated <code>ResourceInfo</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('allowed_origins')) {
        obj['allowed_origins'] = ApiClient.convertToType(data['allowed_origins'], ['String']);
      }
      if (data.hasOwnProperty('api_type')) {
        obj['api_type'] = ApiClient.convertToType(data['api_type'], 'String');
      }
      if (data.hasOwnProperty('resources')) {
        obj['resources'] = ApiClient.convertToType(data['resources'], [ResourceObject]);
      }
      if (data.hasOwnProperty('response_headers')) {
        obj['response_headers'] = ApiClient.convertToType(data['response_headers'], {'String': 'String'});
      }
    }
    return obj;
  }

  /**
   * Allowed Origins
   * @member {Array.<String>} allowed_origins
   */
  exports.prototype['allowed_origins'] = undefined;
  /**
   * API Type
   * @member {module:model/ResourceInfo.ApiTypeEnum} api_type
   */
  exports.prototype['api_type'] = undefined;
  /**
   * An array of resources
   * @member {Array.<module:model/ResourceObject>} resources
   */
  exports.prototype['resources'] = undefined;
  /**
   * Response Header
   * @member {Object.<String, String>} response_headers
   */
  exports.prototype['response_headers'] = undefined;


  /**
   * Allowed values for the <code>api_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ApiTypeEnum = {
    /**
     * value: "data"
     * @const
     */
    "data": "data",
    /**
     * value: "shop"
     * @const
     */
    "shop": "shop"  };


  return exports;
}));


