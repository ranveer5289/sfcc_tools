/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CatalogCategoryId', 'model/ImageGroup', 'model/MarkupText', 'model/Master', 'model/MediaFile', 'model/ProductOption', 'model/ProductType', 'model/Variant', 'model/VariationAttribute', 'model/VariationGroup'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./CatalogCategoryId'), require('./ImageGroup'), require('./MarkupText'), require('./Master'), require('./MediaFile'), require('./ProductOption'), require('./ProductType'), require('./Variant'), require('./VariationAttribute'), require('./VariationGroup'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.Product = factory(root.DataApi.ApiClient, root.DataApi.CatalogCategoryId, root.DataApi.ImageGroup, root.DataApi.MarkupText, root.DataApi.Master, root.DataApi.MediaFile, root.DataApi.ProductOption, root.DataApi.ProductType, root.DataApi.Variant, root.DataApi.VariationAttribute, root.DataApi.VariationGroup);
  }
}(this, function(ApiClient, CatalogCategoryId, ImageGroup, MarkupText, Master, MediaFile, ProductOption, ProductType, Variant, VariationAttribute, VariationGroup) {
  'use strict';



  /**
   * The Product model module.
   * @module model/Product
   * @version 20.8
   */

  /**
   * Constructs a new <code>Product</code>.
   * Document representing a product
   * @alias module:model/Product
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>Product</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Product} obj Optional instance to populate.
   * @return {module:model/Product} The populated <code>Product</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('assigned_categories')) {
        obj['assigned_categories'] = ApiClient.convertToType(data['assigned_categories'], [CatalogCategoryId]);
      }
      if (data.hasOwnProperty('ats')) {
        obj['ats'] = ApiClient.convertToType(data['ats'], 'Number');
      }
      if (data.hasOwnProperty('brand')) {
        obj['brand'] = ApiClient.convertToType(data['brand'], 'String');
      }
      if (data.hasOwnProperty('bundled_products')) {
        obj['bundled_products'] = ApiClient.convertToType(data['bundled_products'], [Product]);
      }
      if (data.hasOwnProperty('c_availableForInStorePickup')) {
        obj['c_availableForInStorePickup'] = ApiClient.convertToType(data['c_availableForInStorePickup'], 'Boolean');
      }
      if (data.hasOwnProperty('c_batteryLife')) {
        obj['c_batteryLife'] = ApiClient.convertToType(data['c_batteryLife'], 'String');
      }
      if (data.hasOwnProperty('c_batteryType')) {
        obj['c_batteryType'] = ApiClient.convertToType(data['c_batteryType'], 'String');
      }
      if (data.hasOwnProperty('c_bootType')) {
        obj['c_bootType'] = ApiClient.convertToType(data['c_bootType'], ['String']);
      }
      if (data.hasOwnProperty('c_bottomType')) {
        obj['c_bottomType'] = ApiClient.convertToType(data['c_bottomType'], ['String']);
      }
      if (data.hasOwnProperty('c_color')) {
        obj['c_color'] = ApiClient.convertToType(data['c_color'], 'String');
      }
      if (data.hasOwnProperty('c_consoleWarranty')) {
        obj['c_consoleWarranty'] = ApiClient.convertToType(data['c_consoleWarranty'], 'String');
      }
      if (data.hasOwnProperty('c_customCSSFile')) {
        obj['c_customCSSFile'] = MediaFile.constructFromObject(data['c_customCSSFile']);
      }
      if (data.hasOwnProperty('c_digitalCameraFeatures')) {
        obj['c_digitalCameraFeatures'] = ApiClient.convertToType(data['c_digitalCameraFeatures'], ['String']);
      }
      if (data.hasOwnProperty('c_digitalCameraPixels')) {
        obj['c_digitalCameraPixels'] = ApiClient.convertToType(data['c_digitalCameraPixels'], 'String');
      }
      if (data.hasOwnProperty('c_digitalCameraType')) {
        obj['c_digitalCameraType'] = ApiClient.convertToType(data['c_digitalCameraType'], 'String');
      }
      if (data.hasOwnProperty('c_digitalCameraWarranty')) {
        obj['c_digitalCameraWarranty'] = ApiClient.convertToType(data['c_digitalCameraWarranty'], 'String');
      }
      if (data.hasOwnProperty('c_dimDepth')) {
        obj['c_dimDepth'] = ApiClient.convertToType(data['c_dimDepth'], 'String');
      }
      if (data.hasOwnProperty('c_dimHeight')) {
        obj['c_dimHeight'] = ApiClient.convertToType(data['c_dimHeight'], 'String');
      }
      if (data.hasOwnProperty('c_dimWeight')) {
        obj['c_dimWeight'] = ApiClient.convertToType(data['c_dimWeight'], 'String');
      }
      if (data.hasOwnProperty('c_dimWidth')) {
        obj['c_dimWidth'] = ApiClient.convertToType(data['c_dimWidth'], 'String');
      }
      if (data.hasOwnProperty('c_displaySize')) {
        obj['c_displaySize'] = ApiClient.convertToType(data['c_displaySize'], 'String');
      }
      if (data.hasOwnProperty('c_gameGenre')) {
        obj['c_gameGenre'] = ApiClient.convertToType(data['c_gameGenre'], ['String']);
      }
      if (data.hasOwnProperty('c_gameRating')) {
        obj['c_gameRating'] = ApiClient.convertToType(data['c_gameRating'], 'String');
      }
      if (data.hasOwnProperty('c_gameSystemType')) {
        obj['c_gameSystemType'] = ApiClient.convertToType(data['c_gameSystemType'], 'String');
      }
      if (data.hasOwnProperty('c_gpsFeatures')) {
        obj['c_gpsFeatures'] = ApiClient.convertToType(data['c_gpsFeatures'], ['String']);
      }
      if (data.hasOwnProperty('c_gpsType')) {
        obj['c_gpsType'] = ApiClient.convertToType(data['c_gpsType'], ['String']);
      }
      if (data.hasOwnProperty('c_gpsWarranty')) {
        obj['c_gpsWarranty'] = ApiClient.convertToType(data['c_gpsWarranty'], 'String');
      }
      if (data.hasOwnProperty('c_imageAspectRatio')) {
        obj['c_imageAspectRatio'] = ApiClient.convertToType(data['c_imageAspectRatio'], 'String');
      }
      if (data.hasOwnProperty('c_isNew')) {
        obj['c_isNew'] = ApiClient.convertToType(data['c_isNew'], 'Boolean');
      }
      if (data.hasOwnProperty('c_isNewtest')) {
        obj['c_isNewtest'] = ApiClient.convertToType(data['c_isNewtest'], 'Boolean');
      }
      if (data.hasOwnProperty('c_isSale')) {
        obj['c_isSale'] = ApiClient.convertToType(data['c_isSale'], 'Boolean');
      }
      if (data.hasOwnProperty('c_kidsAge')) {
        obj['c_kidsAge'] = ApiClient.convertToType(data['c_kidsAge'], 'String');
      }
      if (data.hasOwnProperty('c_length')) {
        obj['c_length'] = ApiClient.convertToType(data['c_length'], 'String');
      }
      if (data.hasOwnProperty('c_lensAperture')) {
        obj['c_lensAperture'] = ApiClient.convertToType(data['c_lensAperture'], 'String');
      }
      if (data.hasOwnProperty('c_materialTest')) {
        obj['c_materialTest'] = ApiClient.convertToType(data['c_materialTest'], ['String']);
      }
      if (data.hasOwnProperty('c_mediaFormat')) {
        obj['c_mediaFormat'] = ApiClient.convertToType(data['c_mediaFormat'], ['String']);
      }
      if (data.hasOwnProperty('c_memorySize')) {
        obj['c_memorySize'] = ApiClient.convertToType(data['c_memorySize'], 'String');
      }
      if (data.hasOwnProperty('c_memoryType')) {
        obj['c_memoryType'] = ApiClient.convertToType(data['c_memoryType'], ['String']);
      }
      if (data.hasOwnProperty('c_musicStorage')) {
        obj['c_musicStorage'] = ApiClient.convertToType(data['c_musicStorage'], 'String');
      }
      if (data.hasOwnProperty('c_opticalZoom')) {
        obj['c_opticalZoom'] = ApiClient.convertToType(data['c_opticalZoom'], 'String');
      }
      if (data.hasOwnProperty('c_outerwearType')) {
        obj['c_outerwearType'] = ApiClient.convertToType(data['c_outerwearType'], 'String');
      }
      if (data.hasOwnProperty('c_portableAudioType')) {
        obj['c_portableAudioType'] = ApiClient.convertToType(data['c_portableAudioType'], ['String']);
      }
      if (data.hasOwnProperty('c_refinementColor')) {
        obj['c_refinementColor'] = ApiClient.convertToType(data['c_refinementColor'], 'String');
      }
      if (data.hasOwnProperty('c_resolution')) {
        obj['c_resolution'] = ApiClient.convertToType(data['c_resolution'], 'String');
      }
      if (data.hasOwnProperty('c_sandalType')) {
        obj['c_sandalType'] = ApiClient.convertToType(data['c_sandalType'], 'String');
      }
      if (data.hasOwnProperty('c_sheets')) {
        obj['c_sheets'] = ApiClient.convertToType(data['c_sheets'], ['String']);
      }
      if (data.hasOwnProperty('c_shoeType')) {
        obj['c_shoeType'] = ApiClient.convertToType(data['c_shoeType'], 'String');
      }
      if (data.hasOwnProperty('c_size')) {
        obj['c_size'] = ApiClient.convertToType(data['c_size'], 'String');
      }
      if (data.hasOwnProperty('c_skinConcern')) {
        obj['c_skinConcern'] = ApiClient.convertToType(data['c_skinConcern'], ['String']);
      }
      if (data.hasOwnProperty('c_styleNumber')) {
        obj['c_styleNumber'] = ApiClient.convertToType(data['c_styleNumber'], 'String');
      }
      if (data.hasOwnProperty('c_tabDescription')) {
        obj['c_tabDescription'] = MarkupText.constructFromObject(data['c_tabDescription']);
      }
      if (data.hasOwnProperty('c_tabDetails')) {
        obj['c_tabDetails'] = MarkupText.constructFromObject(data['c_tabDetails']);
      }
      if (data.hasOwnProperty('c_test')) {
        obj['c_test'] = MarkupText.constructFromObject(data['c_test']);
      }
      if (data.hasOwnProperty('c_topType')) {
        obj['c_topType'] = ApiClient.convertToType(data['c_topType'], 'String');
      }
      if (data.hasOwnProperty('c_tvSignalFormat')) {
        obj['c_tvSignalFormat'] = ApiClient.convertToType(data['c_tvSignalFormat'], 'String');
      }
      if (data.hasOwnProperty('c_tvSize')) {
        obj['c_tvSize'] = ApiClient.convertToType(data['c_tvSize'], 'String');
      }
      if (data.hasOwnProperty('c_tvType')) {
        obj['c_tvType'] = ApiClient.convertToType(data['c_tvType'], 'String');
      }
      if (data.hasOwnProperty('c_tvWarranty')) {
        obj['c_tvWarranty'] = ApiClient.convertToType(data['c_tvWarranty'], 'String');
      }
      if (data.hasOwnProperty('c_videoStorage')) {
        obj['c_videoStorage'] = ApiClient.convertToType(data['c_videoStorage'], 'String');
      }
      if (data.hasOwnProperty('c_waist')) {
        obj['c_waist'] = ApiClient.convertToType(data['c_waist'], 'String');
      }
      if (data.hasOwnProperty('c_width')) {
        obj['c_width'] = ApiClient.convertToType(data['c_width'], 'String');
      }
      if (data.hasOwnProperty('classification_category')) {
        obj['classification_category'] = CatalogCategoryId.constructFromObject(data['classification_category']);
      }
      if (data.hasOwnProperty('creation_date')) {
        obj['creation_date'] = ApiClient.convertToType(data['creation_date'], 'Date');
      }
      if (data.hasOwnProperty('default_variant_id')) {
        obj['default_variant_id'] = ApiClient.convertToType(data['default_variant_id'], 'String');
      }
      if (data.hasOwnProperty('ean')) {
        obj['ean'] = ApiClient.convertToType(data['ean'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('image')) {
        obj['image'] = MediaFile.constructFromObject(data['image']);
      }
      if (data.hasOwnProperty('image_groups')) {
        obj['image_groups'] = ApiClient.convertToType(data['image_groups'], [ImageGroup]);
      }
      if (data.hasOwnProperty('in_stock')) {
        obj['in_stock'] = ApiClient.convertToType(data['in_stock'], 'Boolean');
      }
      if (data.hasOwnProperty('last_modified')) {
        obj['last_modified'] = ApiClient.convertToType(data['last_modified'], 'Date');
      }
      if (data.hasOwnProperty('link')) {
        obj['link'] = ApiClient.convertToType(data['link'], 'String');
      }
      if (data.hasOwnProperty('localized_tax_class_id')) {
        obj['localized_tax_class_id'] = ApiClient.convertToType(data['localized_tax_class_id'], {'String': 'String'});
      }
      if (data.hasOwnProperty('long_description')) {
        obj['long_description'] = ApiClient.convertToType(data['long_description'], {'String': MarkupText});
      }
      if (data.hasOwnProperty('manufacturer_name')) {
        obj['manufacturer_name'] = ApiClient.convertToType(data['manufacturer_name'], 'String');
      }
      if (data.hasOwnProperty('manufacturer_sku')) {
        obj['manufacturer_sku'] = ApiClient.convertToType(data['manufacturer_sku'], 'String');
      }
      if (data.hasOwnProperty('master')) {
        obj['master'] = Master.constructFromObject(data['master']);
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('online')) {
        obj['online'] = ApiClient.convertToType(data['online'], 'Boolean');
      }
      if (data.hasOwnProperty('online_flag')) {
        obj['online_flag'] = ApiClient.convertToType(data['online_flag'], {'String': 'Boolean'});
      }
      if (data.hasOwnProperty('owning_catalog_id')) {
        obj['owning_catalog_id'] = ApiClient.convertToType(data['owning_catalog_id'], 'String');
      }
      if (data.hasOwnProperty('owning_catalog_name')) {
        obj['owning_catalog_name'] = ApiClient.convertToType(data['owning_catalog_name'], {'String': 'String'});
      }
      if (data.hasOwnProperty('page_description')) {
        obj['page_description'] = ApiClient.convertToType(data['page_description'], {'String': 'String'});
      }
      if (data.hasOwnProperty('page_keywords')) {
        obj['page_keywords'] = ApiClient.convertToType(data['page_keywords'], {'String': 'String'});
      }
      if (data.hasOwnProperty('page_title')) {
        obj['page_title'] = ApiClient.convertToType(data['page_title'], {'String': 'String'});
      }
      if (data.hasOwnProperty('price')) {
        obj['price'] = ApiClient.convertToType(data['price'], 'Number');
      }
      if (data.hasOwnProperty('price_currency')) {
        obj['price_currency'] = ApiClient.convertToType(data['price_currency'], 'String');
      }
      if (data.hasOwnProperty('price_per_unit')) {
        obj['price_per_unit'] = ApiClient.convertToType(data['price_per_unit'], 'Number');
      }
      if (data.hasOwnProperty('primary_categories')) {
        obj['primary_categories'] = ApiClient.convertToType(data['primary_categories'], [CatalogCategoryId]);
      }
      if (data.hasOwnProperty('primary_category_id')) {
        obj['primary_category_id'] = ApiClient.convertToType(data['primary_category_id'], 'String');
      }
      if (data.hasOwnProperty('product_bundles')) {
        obj['product_bundles'] = ApiClient.convertToType(data['product_bundles'], [Product]);
      }
      if (data.hasOwnProperty('product_options')) {
        obj['product_options'] = ApiClient.convertToType(data['product_options'], [ProductOption]);
      }
      if (data.hasOwnProperty('product_sets')) {
        obj['product_sets'] = ApiClient.convertToType(data['product_sets'], [Product]);
      }
      if (data.hasOwnProperty('searchable')) {
        obj['searchable'] = ApiClient.convertToType(data['searchable'], {'String': 'Boolean'});
      }
      if (data.hasOwnProperty('set_products')) {
        obj['set_products'] = ApiClient.convertToType(data['set_products'], [Product]);
      }
      if (data.hasOwnProperty('short_description')) {
        obj['short_description'] = ApiClient.convertToType(data['short_description'], {'String': MarkupText});
      }
      if (data.hasOwnProperty('tax_class_id')) {
        obj['tax_class_id'] = ApiClient.convertToType(data['tax_class_id'], 'String');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ProductType.constructFromObject(data['type']);
      }
      if (data.hasOwnProperty('unit')) {
        obj['unit'] = ApiClient.convertToType(data['unit'], 'String');
      }
      if (data.hasOwnProperty('unit_measure')) {
        obj['unit_measure'] = ApiClient.convertToType(data['unit_measure'], 'String');
      }
      if (data.hasOwnProperty('unit_quantity')) {
        obj['unit_quantity'] = ApiClient.convertToType(data['unit_quantity'], 'Number');
      }
      if (data.hasOwnProperty('upc')) {
        obj['upc'] = ApiClient.convertToType(data['upc'], 'String');
      }
      if (data.hasOwnProperty('valid_from')) {
        obj['valid_from'] = ApiClient.convertToType(data['valid_from'], {'String': 'Date'});
      }
      if (data.hasOwnProperty('valid_to')) {
        obj['valid_to'] = ApiClient.convertToType(data['valid_to'], {'String': 'Date'});
      }
      if (data.hasOwnProperty('variants')) {
        obj['variants'] = ApiClient.convertToType(data['variants'], [Variant]);
      }
      if (data.hasOwnProperty('variation_attributes')) {
        obj['variation_attributes'] = ApiClient.convertToType(data['variation_attributes'], [VariationAttribute]);
      }
      if (data.hasOwnProperty('variation_groups')) {
        obj['variation_groups'] = ApiClient.convertToType(data['variation_groups'], [VariationGroup]);
      }
      if (data.hasOwnProperty('variation_values')) {
        obj['variation_values'] = ApiClient.convertToType(data['variation_values'], {'String': 'String'});
      }
    }
    return obj;
  }

  /**
   * The catalog categories that the product is assigned to
   * @member {Array.<module:model/CatalogCategoryId>} assigned_categories
   */
  exports.prototype['assigned_categories'] = undefined;
  /**
   * The ATS(Available To Sell) inventory value of the product. This is a calculated value.
   * @member {Number} ats
   */
  exports.prototype['ats'] = undefined;
  /**
   * The brand of the product.
   * @member {String} brand
   */
  exports.prototype['brand'] = undefined;
  /**
   * The array of bundled products which the product includes.
   * @member {Array.<module:model/Product>} bundled_products
   */
  exports.prototype['bundled_products'] = undefined;
  /**
   * Signals if there are inventory lists for brick-and-mortar stores associated with this product.
   * @member {Boolean} c_availableForInStorePickup
   */
  exports.prototype['c_availableForInStorePickup'] = undefined;
  /**
   * @member {String} c_batteryLife
   */
  exports.prototype['c_batteryLife'] = undefined;
  /**
   * @member {String} c_batteryType
   */
  exports.prototype['c_batteryType'] = undefined;
  /**
   * Type of Boot for search refinement.
   * @member {Array.<module:model/Product.CBootTypeEnum>} c_bootType
   */
  exports.prototype['c_bootType'] = undefined;
  /**
   * Bottom type for search refinement
   * @member {Array.<module:model/Product.CBottomTypeEnum>} c_bottomType
   */
  exports.prototype['c_bottomType'] = undefined;
  /**
   * Product color used for variation attribute
   * @member {String} c_color
   */
  exports.prototype['c_color'] = undefined;
  /**
   * @member {String} c_consoleWarranty
   */
  exports.prototype['c_consoleWarranty'] = undefined;
  /**
   * @member {module:model/MediaFile} c_customCSSFile
   */
  exports.prototype['c_customCSSFile'] = undefined;
  /**
   * @member {Array.<module:model/Product.CDigitalCameraFeaturesEnum>} c_digitalCameraFeatures
   */
  exports.prototype['c_digitalCameraFeatures'] = undefined;
  /**
   * @member {String} c_digitalCameraPixels
   */
  exports.prototype['c_digitalCameraPixels'] = undefined;
  /**
   * @member {String} c_digitalCameraType
   */
  exports.prototype['c_digitalCameraType'] = undefined;
  /**
   * @member {String} c_digitalCameraWarranty
   */
  exports.prototype['c_digitalCameraWarranty'] = undefined;
  /**
   * @member {String} c_dimDepth
   */
  exports.prototype['c_dimDepth'] = undefined;
  /**
   * @member {String} c_dimHeight
   */
  exports.prototype['c_dimHeight'] = undefined;
  /**
   * @member {String} c_dimWeight
   */
  exports.prototype['c_dimWeight'] = undefined;
  /**
   * @member {String} c_dimWidth
   */
  exports.prototype['c_dimWidth'] = undefined;
  /**
   * @member {String} c_displaySize
   */
  exports.prototype['c_displaySize'] = undefined;
  /**
   * @member {Array.<module:model/Product.CGameGenreEnum>} c_gameGenre
   */
  exports.prototype['c_gameGenre'] = undefined;
  /**
   * @member {String} c_gameRating
   */
  exports.prototype['c_gameRating'] = undefined;
  /**
   * @member {String} c_gameSystemType
   */
  exports.prototype['c_gameSystemType'] = undefined;
  /**
   * @member {Array.<module:model/Product.CGpsFeaturesEnum>} c_gpsFeatures
   */
  exports.prototype['c_gpsFeatures'] = undefined;
  /**
   * @member {Array.<module:model/Product.CGpsTypeEnum>} c_gpsType
   */
  exports.prototype['c_gpsType'] = undefined;
  /**
   * @member {String} c_gpsWarranty
   */
  exports.prototype['c_gpsWarranty'] = undefined;
  /**
   * @member {String} c_imageAspectRatio
   */
  exports.prototype['c_imageAspectRatio'] = undefined;
  /**
   * @member {Boolean} c_isNew
   */
  exports.prototype['c_isNew'] = undefined;
  /**
   * This indiciates if the product is a new arrival.
   * @member {Boolean} c_isNewtest
   */
  exports.prototype['c_isNewtest'] = undefined;
  /**
   * This is the help text. It is used for sorting rules.
   * @member {Boolean} c_isSale
   */
  exports.prototype['c_isSale'] = undefined;
  /**
   * Kids Age used for search refinements
   * @member {module:model/Product.CKidsAgeEnum} c_kidsAge
   */
  exports.prototype['c_kidsAge'] = undefined;
  /**
   * This attribute is used for mens and womens pants lengths.
   * @member {String} c_length
   */
  exports.prototype['c_length'] = undefined;
  /**
   * @member {String} c_lensAperture
   */
  exports.prototype['c_lensAperture'] = undefined;
  /**
   * @member {Array.<module:model/Product.CMaterialTestEnum>} c_materialTest
   */
  exports.prototype['c_materialTest'] = undefined;
  /**
   * Media Format
   * @member {Array.<module:model/Product.CMediaFormatEnum>} c_mediaFormat
   */
  exports.prototype['c_mediaFormat'] = undefined;
  /**
   * Memory Size
   * @member {String} c_memorySize
   */
  exports.prototype['c_memorySize'] = undefined;
  /**
   * @member {Array.<module:model/Product.CMemoryTypeEnum>} c_memoryType
   */
  exports.prototype['c_memoryType'] = undefined;
  /**
   * @member {String} c_musicStorage
   */
  exports.prototype['c_musicStorage'] = undefined;
  /**
   * @member {String} c_opticalZoom
   */
  exports.prototype['c_opticalZoom'] = undefined;
  /**
   * Type of Outerwear for search refinement
   * @member {module:model/Product.COuterwearTypeEnum} c_outerwearType
   */
  exports.prototype['c_outerwearType'] = undefined;
  /**
   * @member {Array.<module:model/Product.CPortableAudioTypeEnum>} c_portableAudioType
   */
  exports.prototype['c_portableAudioType'] = undefined;
  /**
   * @member {module:model/Product.CRefinementColorEnum} c_refinementColor
   */
  exports.prototype['c_refinementColor'] = undefined;
  /**
   * @member {String} c_resolution
   */
  exports.prototype['c_resolution'] = undefined;
  /**
   * Type of Sandal for search refinement
   * @member {module:model/Product.CSandalTypeEnum} c_sandalType
   */
  exports.prototype['c_sandalType'] = undefined;
  /**
   * test attribute
   * @member {Array.<module:model/Product.CSheetsEnum>} c_sheets
   */
  exports.prototype['c_sheets'] = undefined;
  /**
   * Type of Shoe for search refinements
   * @member {module:model/Product.CShoeTypeEnum} c_shoeType
   */
  exports.prototype['c_shoeType'] = undefined;
  /**
   * This attribute is used for all footwear, apparel and accessory sizing for men, women and kids products.
   * @member {String} c_size
   */
  exports.prototype['c_size'] = undefined;
  /**
   * @member {Array.<module:model/Product.CSkinConcernEnum>} c_skinConcern
   */
  exports.prototype['c_skinConcern'] = undefined;
  /**
   * @member {String} c_styleNumber
   */
  exports.prototype['c_styleNumber'] = undefined;
  /**
   * @member {module:model/MarkupText} c_tabDescription
   */
  exports.prototype['c_tabDescription'] = undefined;
  /**
   * @member {module:model/MarkupText} c_tabDetails
   */
  exports.prototype['c_tabDetails'] = undefined;
  /**
   * @member {module:model/MarkupText} c_test
   */
  exports.prototype['c_test'] = undefined;
  /**
   * Type of tops in clothing
   * @member {String} c_topType
   */
  exports.prototype['c_topType'] = undefined;
  /**
   * @member {String} c_tvSignalFormat
   */
  exports.prototype['c_tvSignalFormat'] = undefined;
  /**
   * @member {String} c_tvSize
   */
  exports.prototype['c_tvSize'] = undefined;
  /**
   * @member {module:model/Product.CTvTypeEnum} c_tvType
   */
  exports.prototype['c_tvType'] = undefined;
  /**
   * @member {String} c_tvWarranty
   */
  exports.prototype['c_tvWarranty'] = undefined;
  /**
   * @member {String} c_videoStorage
   */
  exports.prototype['c_videoStorage'] = undefined;
  /**
   * Attribute used for apparel waist sizing.
   * @member {String} c_waist
   */
  exports.prototype['c_waist'] = undefined;
  /**
   * This attribute is used for shoe widths for mens, womens and kids.
   * @member {String} c_width
   */
  exports.prototype['c_width'] = undefined;
  /**
   * @member {module:model/CatalogCategoryId} classification_category
   */
  exports.prototype['classification_category'] = undefined;
  /**
   * Returns the value of attribute 'creationDate'.
   * @member {Date} creation_date
   */
  exports.prototype['creation_date'] = undefined;
  /**
   * The ID of the product's default variant.
   * @member {String} default_variant_id
   */
  exports.prototype['default_variant_id'] = undefined;
  /**
   * The European Article Number of the product.
   * @member {String} ean
   */
  exports.prototype['ean'] = undefined;
  /**
   * The ID (SKU) of the product.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * @member {module:model/MediaFile} image
   */
  exports.prototype['image'] = undefined;
  /**
   * The array of product image groups.
   * @member {Array.<module:model/ImageGroup>} image_groups
   */
  exports.prototype['image_groups'] = undefined;
  /**
   * The flag that indicates if the product is in stock, or not. This is a calculated value.
   * @member {Boolean} in_stock
   */
  exports.prototype['in_stock'] = undefined;
  /**
   * Returns the value of attribute 'lastModified'.
   * @member {Date} last_modified
   */
  exports.prototype['last_modified'] = undefined;
  /**
   * A link to the product.
   * @member {String} link
   */
  exports.prototype['link'] = undefined;
  /**
   * 
   * @member {Object.<String, String>} localized_tax_class_id
   */
  exports.prototype['localized_tax_class_id'] = undefined;
  /**
   * The localized long description of the product.
   * @member {Object.<String, module:model/MarkupText>} long_description
   */
  exports.prototype['long_description'] = undefined;
  /**
   * The name of the product's manufacturer.
   * @member {String} manufacturer_name
   */
  exports.prototype['manufacturer_name'] = undefined;
  /**
   * The SKU of the product's manufacturer.
   * @member {String} manufacturer_sku
   */
  exports.prototype['manufacturer_sku'] = undefined;
  /**
   * @member {module:model/Master} master
   */
  exports.prototype['master'] = undefined;
  /**
   * The localized name of the product.
   * @member {Object.<String, String>} name
   */
  exports.prototype['name'] = undefined;
  /**
   * The flag that indicates if the product is online, or not. This is a calculated value.
   * @member {Boolean} online
   */
  exports.prototype['online'] = undefined;
  /**
   * The site specific online status of the product.
   * @member {Object.<String, Boolean>} online_flag
   */
  exports.prototype['online_flag'] = undefined;
  /**
   * The ID of the catalog that owns the product.
   * @member {String} owning_catalog_id
   */
  exports.prototype['owning_catalog_id'] = undefined;
  /**
   * The localized name of the catalog that owns the product.
   * @member {Object.<String, String>} owning_catalog_name
   */
  exports.prototype['owning_catalog_name'] = undefined;
  /**
   * The localized page description of the product.
   * @member {Object.<String, String>} page_description
   */
  exports.prototype['page_description'] = undefined;
  /**
   * The localized page keywords of the product.
   * @member {Object.<String, String>} page_keywords
   */
  exports.prototype['page_keywords'] = undefined;
  /**
   * The localized page title of the product.
   * @member {Object.<String, String>} page_title
   */
  exports.prototype['page_title'] = undefined;
  /**
   * The price of the product.
   * @member {Number} price
   */
  exports.prototype['price'] = undefined;
  /**
   * The currency code for product's price.
   * @member {String} price_currency
   */
  exports.prototype['price_currency'] = undefined;
  /**
   * The price per unit of the product
   * @member {Number} price_per_unit
   */
  exports.prototype['price_per_unit'] = undefined;
  /**
   * The catalog categories that are primary for the product
   * @member {Array.<module:model/CatalogCategoryId>} primary_categories
   */
  exports.prototype['primary_categories'] = undefined;
  /**
   * The id of the products primary category.
   * @member {String} primary_category_id
   */
  exports.prototype['primary_category_id'] = undefined;
  /**
   * The array of product bundles which the product belongs to.
   * @member {Array.<module:model/Product>} product_bundles
   */
  exports.prototype['product_bundles'] = undefined;
  /**
   * The array of product options. This is applicable for products of type \"option\".
   * @member {Array.<module:model/ProductOption>} product_options
   */
  exports.prototype['product_options'] = undefined;
  /**
   * The array of product sets which the product belongs to.
   * @member {Array.<module:model/Product>} product_sets
   */
  exports.prototype['product_sets'] = undefined;
  /**
   * The site specific searchable status of the product.
   * @member {Object.<String, Boolean>} searchable
   */
  exports.prototype['searchable'] = undefined;
  /**
   * The array of set products which the product includes.
   * @member {Array.<module:model/Product>} set_products
   */
  exports.prototype['set_products'] = undefined;
  /**
   * The localized short description of the product.
   * @member {Object.<String, module:model/MarkupText>} short_description
   */
  exports.prototype['short_description'] = undefined;
  /**
   * The catalog categories that the product is assigned to
   * @member {String} tax_class_id
   */
  exports.prototype['tax_class_id'] = undefined;
  /**
   * @member {module:model/ProductType} type
   */
  exports.prototype['type'] = undefined;
  /**
   * The sales unit of the product.
   * @member {String} unit
   */
  exports.prototype['unit'] = undefined;
  /**
   * The unitMeasure of the product.
   * @member {String} unit_measure
   */
  exports.prototype['unit_measure'] = undefined;
  /**
   * The unitQuantity of the product.
   * @member {Number} unit_quantity
   */
  exports.prototype['unit_quantity'] = undefined;
  /**
   * The Universal Product Code of the product.
   * @member {String} upc
   */
  exports.prototype['upc'] = undefined;
  /**
   * The time when product is valid from.
   * @member {Object.<String, Date>} valid_from
   */
  exports.prototype['valid_from'] = undefined;
  /**
   * The time when product is valid to.
   * @member {Object.<String, Date>} valid_to
   */
  exports.prototype['valid_to'] = undefined;
  /**
   * The array of variants of the product. This is applicable for product types \"master\" and \"variation_group\" only.
   * @member {Array.<module:model/Variant>} variants
   */
  exports.prototype['variants'] = undefined;
  /**
   * The sorted array of variation attributes assigned to the product. This is applicable for product types \"master\",  \"variation_group\" and \"variant\" only.
   * @member {Array.<module:model/VariationAttribute>} variation_attributes
   */
  exports.prototype['variation_attributes'] = undefined;
  /**
   * The array of variation groups in the product. This is applicable for product type \"master\" only.
   * @member {Array.<module:model/VariationGroup>} variation_groups
   */
  exports.prototype['variation_groups'] = undefined;
  /**
   * The variation values selected for the product in variation attribute id and value pairs. This is applicable for product types \"variant\" and  \"variation_group\" only.
   * @member {Object.<String, String>} variation_values
   */
  exports.prototype['variation_values'] = undefined;


  /**
   * Allowed values for the <code>cBootType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CBootTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070"  };

  /**
   * Allowed values for the <code>cBottomType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CBottomTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080"  };

  /**
   * Allowed values for the <code>cDigitalCameraFeatures</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CDigitalCameraFeaturesEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080",
    /**
     * value: "0090"
     * @const
     */
    "0090": "0090",
    /**
     * value: "0100"
     * @const
     */
    "0100": "0100",
    /**
     * value: "0110"
     * @const
     */
    "0110": "0110",
    /**
     * value: "0120"
     * @const
     */
    "0120": "0120",
    /**
     * value: "0130"
     * @const
     */
    "0130": "0130",
    /**
     * value: "0140"
     * @const
     */
    "0140": "0140",
    /**
     * value: "0150"
     * @const
     */
    "0150": "0150",
    /**
     * value: "0160"
     * @const
     */
    "0160": "0160",
    /**
     * value: "0170"
     * @const
     */
    "0170": "0170",
    /**
     * value: "0180"
     * @const
     */
    "0180": "0180",
    /**
     * value: "0190"
     * @const
     */
    "0190": "0190",
    /**
     * value: "0200"
     * @const
     */
    "0200": "0200",
    /**
     * value: "0210"
     * @const
     */
    "0210": "0210",
    /**
     * value: "0220"
     * @const
     */
    "0220": "0220",
    /**
     * value: "0230"
     * @const
     */
    "0230": "0230",
    /**
     * value: "0240"
     * @const
     */
    "0240": "0240",
    /**
     * value: "0250"
     * @const
     */
    "0250": "0250",
    /**
     * value: "0260"
     * @const
     */
    "0260": "0260",
    /**
     * value: "0270"
     * @const
     */
    "0270": "0270",
    /**
     * value: "0280"
     * @const
     */
    "0280": "0280"  };

  /**
   * Allowed values for the <code>cGameGenre</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CGameGenreEnum = {
    /**
     * value: "Action"
     * @const
     */
    "Action": "Action",
    /**
     * value: "Educational"
     * @const
     */
    "Educational": "Educational",
    /**
     * value: "Kids"
     * @const
     */
    "Kids": "Kids",
    /**
     * value: "Racing"
     * @const
     */
    "Racing": "Racing",
    /**
     * value: "Role-Playing"
     * @const
     */
    "Role-Playing": "Role-Playing",
    /**
     * value: "Sports"
     * @const
     */
    "Sports": "Sports",
    /**
     * value: "Strategy"
     * @const
     */
    "Strategy": "Strategy"  };

  /**
   * Allowed values for the <code>cGpsFeatures</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CGpsFeaturesEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080",
    /**
     * value: "0090"
     * @const
     */
    "0090": "0090",
    /**
     * value: "0100"
     * @const
     */
    "0100": "0100",
    /**
     * value: "0110"
     * @const
     */
    "0110": "0110",
    /**
     * value: "0120"
     * @const
     */
    "0120": "0120",
    /**
     * value: "0130"
     * @const
     */
    "0130": "0130",
    /**
     * value: "0140"
     * @const
     */
    "0140": "0140",
    /**
     * value: "0150"
     * @const
     */
    "0150": "0150",
    /**
     * value: "0160"
     * @const
     */
    "0160": "0160",
    /**
     * value: "0170"
     * @const
     */
    "0170": "0170",
    /**
     * value: "0180"
     * @const
     */
    "0180": "0180",
    /**
     * value: "0190"
     * @const
     */
    "0190": "0190",
    /**
     * value: "0200"
     * @const
     */
    "0200": "0200",
    /**
     * value: "0210"
     * @const
     */
    "0210": "0210",
    /**
     * value: "0230"
     * @const
     */
    "0230": "0230"  };

  /**
   * Allowed values for the <code>cGpsType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CGpsTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040"  };

  /**
   * Allowed values for the <code>c_kidsAge</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CKidsAgeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070"  };

  /**
   * Allowed values for the <code>cMaterialTest</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CMaterialTestEnum = {
    /**
     * value: "cotton"
     * @const
     */
    "cotton": "cotton",
    /**
     * value: "wool"
     * @const
     */
    "wool": "wool",
    /**
     * value: "polyester"
     * @const
     */
    "polyester": "polyester"  };

  /**
   * Allowed values for the <code>cMediaFormat</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CMediaFormatEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080",
    /**
     * value: "0090"
     * @const
     */
    "0090": "0090",
    /**
     * value: "0100"
     * @const
     */
    "0100": "0100"  };

  /**
   * Allowed values for the <code>cMemoryType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CMemoryTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080",
    /**
     * value: "0090"
     * @const
     */
    "0090": "0090"  };

  /**
   * Allowed values for the <code>c_outerwearType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.COuterwearTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080"  };

  /**
   * Allowed values for the <code>cPortableAudioType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CPortableAudioTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030"  };

  /**
   * Allowed values for the <code>c_refinementColor</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CRefinementColorEnum = {
    /**
     * value: "black"
     * @const
     */
    "black": "black",
    /**
     * value: "blue"
     * @const
     */
    "blue": "blue",
    /**
     * value: "green"
     * @const
     */
    "green": "green",
    /**
     * value: "red"
     * @const
     */
    "red": "red",
    /**
     * value: "orange"
     * @const
     */
    "orange": "orange",
    /**
     * value: "pink"
     * @const
     */
    "pink": "pink",
    /**
     * value: "purple"
     * @const
     */
    "purple": "purple",
    /**
     * value: "white"
     * @const
     */
    "white": "white",
    /**
     * value: "yellow"
     * @const
     */
    "yellow": "yellow",
    /**
     * value: "grey"
     * @const
     */
    "grey": "grey",
    /**
     * value: "beige"
     * @const
     */
    "beige": "beige",
    /**
     * value: "miscellaneous"
     * @const
     */
    "miscellaneous": "miscellaneous",
    /**
     * value: "brown"
     * @const
     */
    "brown": "brown",
    /**
     * value: "navy"
     * @const
     */
    "navy": "navy"  };

  /**
   * Allowed values for the <code>c_sandalType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CSandalTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030"  };

  /**
   * Allowed values for the <code>cSheets</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CSheetsEnum = {
    /**
     * value: "value1"
     * @const
     */
    "value1": "value1",
    /**
     * value: "value2"
     * @const
     */
    "value2": "value2",
    /**
     * value: "value3"
     * @const
     */
    "value3": "value3"  };

  /**
   * Allowed values for the <code>c_shoeType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CShoeTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040",
    /**
     * value: "0050"
     * @const
     */
    "0050": "0050",
    /**
     * value: "0060"
     * @const
     */
    "0060": "0060",
    /**
     * value: "0070"
     * @const
     */
    "0070": "0070",
    /**
     * value: "0080"
     * @const
     */
    "0080": "0080",
    /**
     * value: "0090"
     * @const
     */
    "0090": "0090",
    /**
     * value: "0100"
     * @const
     */
    "0100": "0100",
    /**
     * value: "0110"
     * @const
     */
    "0110": "0110"  };

  /**
   * Allowed values for the <code>cSkinConcern</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CSkinConcernEnum = {
    /**
     * value: "dryTight"
     * @const
     */
    "dryTight": "dryTight",
    /**
     * value: "comprehensive"
     * @const
     */
    "comprehensive": "comprehensive",
    /**
     * value: "liftingLossFirm"
     * @const
     */
    "liftingLossFirm": "liftingLossFirm"  };

  /**
   * Allowed values for the <code>c_tvType</code> property.
   * @enum {String}
   * @readonly
   */
  exports.CTvTypeEnum = {
    /**
     * value: "0010"
     * @const
     */
    "0010": "0010",
    /**
     * value: "0020"
     * @const
     */
    "0020": "0020",
    /**
     * value: "0030"
     * @const
     */
    "0030": "0030",
    /**
     * value: "0040"
     * @const
     */
    "0040": "0040"  };


  return exports;
}));


