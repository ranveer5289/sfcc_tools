/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DataApi) {
      root.DataApi = {};
    }
    root.DataApi.AbTestTrigger = factory(root.DataApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The AbTestTrigger model module.
   * @module model/AbTestTrigger
   * @version 20.8
   */

  /**
   * Constructs a new <code>AbTestTrigger</code>.
   * Document representing an A/B Test trigger.
   * @alias module:model/AbTestTrigger
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>AbTestTrigger</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AbTestTrigger} obj Optional instance to populate.
   * @return {module:model/AbTestTrigger} The populated <code>AbTestTrigger</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('categories')) {
        obj['categories'] = ApiClient.convertToType(data['categories'], ['String']);
      }
      if (data.hasOwnProperty('is_pipeline_based')) {
        obj['is_pipeline_based'] = ApiClient.convertToType(data['is_pipeline_based'], 'Boolean');
      }
      if (data.hasOwnProperty('pipeline_calls')) {
        obj['pipeline_calls'] = ApiClient.convertToType(data['pipeline_calls'], ['String']);
      }
      if (data.hasOwnProperty('trigger_type')) {
        obj['trigger_type'] = ApiClient.convertToType(data['trigger_type'], 'String');
      }
    }
    return obj;
  }

  /**
   * The list of categories. This is a modifiable attribute when trigger type is 'category_page_view' only
   * @member {Array.<String>} categories
   */
  exports.prototype['categories'] = undefined;
  /**
   * The flag indicating if the trigger is based on pipelines. This is a computed attribute and cannot be modified
   * @member {Boolean} is_pipeline_based
   */
  exports.prototype['is_pipeline_based'] = undefined;
  /**
   * The list of pipeline name and start node combinations (for example, Account-Show). This is a modifiable attribute when trigger type is 'pipeline_calls' only
   * @member {Array.<String>} pipeline_calls
   */
  exports.prototype['pipeline_calls'] = undefined;
  /**
   * The type of the trigger. Defaults to 'immediately' if not specified on create
   * @member {module:model/AbTestTrigger.TriggerTypeEnum} trigger_type
   */
  exports.prototype['trigger_type'] = undefined;


  /**
   * Allowed values for the <code>trigger_type</code> property.
   * @enum {String}
   * @readonly
   */
  exports.TriggerTypeEnum = {
    /**
     * value: "immediately"
     * @const
     */
    "immediately": "immediately",
    /**
     * value: "category_page_view"
     * @const
     */
    "category_page_view": "category_page_view",
    /**
     * value: "home_page_view"
     * @const
     */
    "home_page_view": "home_page_view",
    /**
     * value: "pipeline_call"
     * @const
     */
    "pipeline_call": "pipeline_call"  };


  return exports;
}));


