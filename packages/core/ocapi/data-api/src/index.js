/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.4
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 4.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AbTest', 'model/AbTestGroup', 'model/AbTestSearchResult', 'model/AbTestSegment', 'model/AbTestSegmentStats', 'model/AbTestTrigger', 'model/AbTests', 'model/AccountTransaction', 'model/AlertDescriptor', 'model/AlertDescriptorSettings', 'model/AlertDescriptors', 'model/AlertDescriptorsRevalidationRequest', 'model/AlertItem', 'model/AlertItems', 'model/AlertSettings', 'model/ApplicationPermissions', 'model/Bmpermissions', 'model/BoolFilter', 'model/BoolQuery', 'model/Campaign', 'model/CampaignSearchResult', 'model/Campaigns', 'model/CartridgePathAddRequest', 'model/CartridgePathApiResponse', 'model/CartridgePathCreateRequest', 'model/Catalog', 'model/CatalogCategoryId', 'model/CatalogSearchResult', 'model/Catalogs', 'model/Categories', 'model/Category', 'model/CategoryLink', 'model/CategoryLinks', 'model/CategoryProductAssignment', 'model/CategoryProductAssignmentSearchRequest', 'model/CategoryProductAssignmentSearchResult', 'model/CategorySearchResult', 'model/CodeVersion', 'model/CodeVersionResult', 'model/ContentAsset', 'model/ContentAssetResult', 'model/ContentFolder', 'model/ContentFolderAssignment', 'model/ContentFolderResult', 'model/ContentSubFolderResult', 'model/Coupon', 'model/CouponCode', 'model/CouponCodes', 'model/CouponMultiCodesRequest', 'model/CouponRedemption', 'model/CouponRedemptionSearchResult', 'model/CouponSearchResult', 'model/CouponSystemCodeConfig', 'model/Coupons', 'model/Credentials', 'model/Cscpermissions', 'model/CustomLogSettings', 'model/CustomObject', 'model/CustomObjectSearchResult', 'model/Customer', 'model/CustomerAddress', 'model/CustomerAddressResult', 'model/CustomerGroup', 'model/CustomerGroupMember', 'model/CustomerGroupMemberSearchResult', 'model/CustomerGroupMembers', 'model/CustomerGroupSearchResult', 'model/CustomerGroups', 'model/CustomerList', 'model/CustomerListLink', 'model/CustomerSearchHit', 'model/CustomerSearchResult', 'model/EcdnLogFetchRequest', 'model/EcdnLogFetchResponse', 'model/FilteredQuery', 'model/FunctionalPermission', 'model/FunctionalPermissions', 'model/GiftCertificate', 'model/GiftCertificateSearchResult', 'model/GiftCertificates', 'model/ImageGroup', 'model/InventoryList', 'model/InventoryListSearchResult', 'model/InventoryLists', 'model/JobExecution', 'model/JobExecutionParameter', 'model/JobExecutionRequest', 'model/JobExecutionSearchResult', 'model/JobStepExecution', 'model/Locale', 'model/LocalePermission', 'model/LocalePermissions', 'model/LocaleResult', 'model/LogCategory', 'model/MarkupText', 'model/Master', 'model/MediaFile', 'model/MenuAction', 'model/MenuItem', 'model/ModulePermissions', 'model/Money', 'model/NestedQuery', 'model/ObjectAttributeDefinition', 'model/ObjectAttributeDefinitionSearchResult', 'model/ObjectAttributeDefinitions', 'model/ObjectAttributeGroup', 'model/ObjectAttributeGroupSearchResult', 'model/ObjectAttributeGroups', 'model/ObjectAttributeValueDefinition', 'model/ObjectTypeDefinition', 'model/ObjectTypeDefinitionSearchResult', 'model/ObjectTypeDefinitions', 'model/OcapiConfigsApiRequest', 'model/OcapiConfigsApiResponse', 'model/OrderConfirmationStatusUpdateRequest', 'model/OrderExportStatusUpdateRequest', 'model/OrderExternalStatusUpdateRequest', 'model/OrderPaymentStatusUpdateRequest', 'model/OrderShippingStatusUpdateRequest', 'model/OrderStatusUpdateRequest', 'model/OrganizationPreferences', 'model/PasswordChangeRequest', 'model/PathRecord', 'model/PreferenceValue', 'model/PreferenceValueSearchResult', 'model/Product', 'model/ProductInventoryRecord', 'model/ProductInventoryRecordAllocation', 'model/ProductInventoryRecords', 'model/ProductOption', 'model/ProductOptionValue', 'model/ProductOptionValues', 'model/ProductOptions', 'model/ProductSearchResult', 'model/ProductType', 'model/Promotion', 'model/PromotionAbtestGroupAssignment', 'model/PromotionAssignmentInformation', 'model/PromotionCampaignAssignment', 'model/PromotionCampaignAssignmentSearchResult', 'model/PromotionSearchResult', 'model/Promotions', 'model/QueryFilter', 'model/Range2Filter', 'model/RangeFilter', 'model/Recommender', 'model/RecommendersResult', 'model/Recurrence', 'model/RedemptionLimitPerPeriod', 'model/RedemptionLimits', 'model/ResourceInfo', 'model/ResourceObject', 'model/ResultPage', 'model/Role', 'model/RoleFunctionalPermission', 'model/RoleFunctionalPermissions', 'model/RoleLocalePermission', 'model/RoleLocalePermissions', 'model/RoleModulePermission', 'model/RoleModulePermissions', 'model/RolePermissions', 'model/RoleSearchRequest', 'model/RoleSearchResult', 'model/RoleWebdavPermission', 'model/RoleWebdavPermissions', 'model/Roles', 'model/Rule', 'model/Schedule', 'model/SearchRequest', 'model/ShippingAddressUpdateRequest', 'model/Site', 'model/SitePreferences', 'model/SiteResourceInfo', 'model/SiteSearchResult', 'model/Sites', 'model/Slot', 'model/SlotConfiguration', 'model/SlotConfigurationAbtestGroupAssignment', 'model/SlotConfigurationAssignmentInformation', 'model/SlotConfigurationCampaignAssignment', 'model/SlotConfigurationCampaignAssignmentSearchResult', 'model/SlotConfigurationSearchResult', 'model/SlotConfigurations', 'model/SlotContent', 'model/SlotSearchResult', 'model/Slots', 'model/Sort', 'model/SortingRule', 'model/SortingRuleSearchResult', 'model/SortingRuleStep', 'model/SourceCodeGroup', 'model/SourceCodeGroupSearchResult', 'model/SourceCodeGroups', 'model/SourceCodeRedirectInfo', 'model/SourceCodeSpecification', 'model/Status', 'model/StatusMetadata', 'model/Store', 'model/StoreSearchResult', 'model/Stores', 'model/Tag', 'model/TermFilter', 'model/TermQuery', 'model/TextQuery', 'model/TimeOfDay', 'model/User', 'model/UserSearchResult', 'model/Users', 'model/Variant', 'model/VariantSearchResult', 'model/Variants', 'model/VariationAttribute', 'model/VariationAttributeValue', 'model/VariationAttributeValues', 'model/VariationAttributes', 'model/VariationGroup', 'model/VariationGroups', 'model/VersionRangeObject', 'model/WebdavPermission', 'model/WebdavPermissions', 'api/AlertsApi', 'api/CatalogSearchApi', 'api/CatalogsApi', 'api/CategorySearchApi', 'api/CodeVersionsApi', 'api/CustomObjectDefinitionsApi', 'api/CustomObjectsApi', 'api/CustomObjectsSearchApi', 'api/CustomerListsApi', 'api/GlobalPreferencesApi', 'api/InventoryListSearchApi', 'api/InventoryListsApi', 'api/JobExecutionSearchApi', 'api/JobsApi', 'api/LibrariesApi', 'api/LocaleInfoApi', 'api/LogRequestsApi', 'api/OcapiConfigsApi', 'api/PermissionsApi', 'api/ProductSearchApi', 'api/ProductsApi', 'api/RoleSearchApi', 'api/RolesApi', 'api/SettingsApi', 'api/SitePreferencesApi', 'api/SiteSearchApi', 'api/SitesApi', 'api/SystemObjectDefinitionSearchApi', 'api/SystemObjectDefinitionsApi', 'api/UserSearchApi', 'api/UsersApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AbTest'), require('./model/AbTestGroup'), require('./model/AbTestSearchResult'), require('./model/AbTestSegment'), require('./model/AbTestSegmentStats'), require('./model/AbTestTrigger'), require('./model/AbTests'), require('./model/AccountTransaction'), require('./model/AlertDescriptor'), require('./model/AlertDescriptorSettings'), require('./model/AlertDescriptors'), require('./model/AlertDescriptorsRevalidationRequest'), require('./model/AlertItem'), require('./model/AlertItems'), require('./model/AlertSettings'), require('./model/ApplicationPermissions'), require('./model/Bmpermissions'), require('./model/BoolFilter'), require('./model/BoolQuery'), require('./model/Campaign'), require('./model/CampaignSearchResult'), require('./model/Campaigns'), require('./model/CartridgePathAddRequest'), require('./model/CartridgePathApiResponse'), require('./model/CartridgePathCreateRequest'), require('./model/Catalog'), require('./model/CatalogCategoryId'), require('./model/CatalogSearchResult'), require('./model/Catalogs'), require('./model/Categories'), require('./model/Category'), require('./model/CategoryLink'), require('./model/CategoryLinks'), require('./model/CategoryProductAssignment'), require('./model/CategoryProductAssignmentSearchRequest'), require('./model/CategoryProductAssignmentSearchResult'), require('./model/CategorySearchResult'), require('./model/CodeVersion'), require('./model/CodeVersionResult'), require('./model/ContentAsset'), require('./model/ContentAssetResult'), require('./model/ContentFolder'), require('./model/ContentFolderAssignment'), require('./model/ContentFolderResult'), require('./model/ContentSubFolderResult'), require('./model/Coupon'), require('./model/CouponCode'), require('./model/CouponCodes'), require('./model/CouponMultiCodesRequest'), require('./model/CouponRedemption'), require('./model/CouponRedemptionSearchResult'), require('./model/CouponSearchResult'), require('./model/CouponSystemCodeConfig'), require('./model/Coupons'), require('./model/Credentials'), require('./model/Cscpermissions'), require('./model/CustomLogSettings'), require('./model/CustomObject'), require('./model/CustomObjectSearchResult'), require('./model/Customer'), require('./model/CustomerAddress'), require('./model/CustomerAddressResult'), require('./model/CustomerGroup'), require('./model/CustomerGroupMember'), require('./model/CustomerGroupMemberSearchResult'), require('./model/CustomerGroupMembers'), require('./model/CustomerGroupSearchResult'), require('./model/CustomerGroups'), require('./model/CustomerList'), require('./model/CustomerListLink'), require('./model/CustomerSearchHit'), require('./model/CustomerSearchResult'), require('./model/EcdnLogFetchRequest'), require('./model/EcdnLogFetchResponse'), require('./model/FilteredQuery'), require('./model/FunctionalPermission'), require('./model/FunctionalPermissions'), require('./model/GiftCertificate'), require('./model/GiftCertificateSearchResult'), require('./model/GiftCertificates'), require('./model/ImageGroup'), require('./model/InventoryList'), require('./model/InventoryListSearchResult'), require('./model/InventoryLists'), require('./model/JobExecution'), require('./model/JobExecutionParameter'), require('./model/JobExecutionRequest'), require('./model/JobExecutionSearchResult'), require('./model/JobStepExecution'), require('./model/Locale'), require('./model/LocalePermission'), require('./model/LocalePermissions'), require('./model/LocaleResult'), require('./model/LogCategory'), require('./model/MarkupText'), require('./model/Master'), require('./model/MediaFile'), require('./model/MenuAction'), require('./model/MenuItem'), require('./model/ModulePermissions'), require('./model/Money'), require('./model/NestedQuery'), require('./model/ObjectAttributeDefinition'), require('./model/ObjectAttributeDefinitionSearchResult'), require('./model/ObjectAttributeDefinitions'), require('./model/ObjectAttributeGroup'), require('./model/ObjectAttributeGroupSearchResult'), require('./model/ObjectAttributeGroups'), require('./model/ObjectAttributeValueDefinition'), require('./model/ObjectTypeDefinition'), require('./model/ObjectTypeDefinitionSearchResult'), require('./model/ObjectTypeDefinitions'), require('./model/OcapiConfigsApiRequest'), require('./model/OcapiConfigsApiResponse'), require('./model/OrderConfirmationStatusUpdateRequest'), require('./model/OrderExportStatusUpdateRequest'), require('./model/OrderExternalStatusUpdateRequest'), require('./model/OrderPaymentStatusUpdateRequest'), require('./model/OrderShippingStatusUpdateRequest'), require('./model/OrderStatusUpdateRequest'), require('./model/OrganizationPreferences'), require('./model/PasswordChangeRequest'), require('./model/PathRecord'), require('./model/PreferenceValue'), require('./model/PreferenceValueSearchResult'), require('./model/Product'), require('./model/ProductInventoryRecord'), require('./model/ProductInventoryRecordAllocation'), require('./model/ProductInventoryRecords'), require('./model/ProductOption'), require('./model/ProductOptionValue'), require('./model/ProductOptionValues'), require('./model/ProductOptions'), require('./model/ProductSearchResult'), require('./model/ProductType'), require('./model/Promotion'), require('./model/PromotionAbtestGroupAssignment'), require('./model/PromotionAssignmentInformation'), require('./model/PromotionCampaignAssignment'), require('./model/PromotionCampaignAssignmentSearchResult'), require('./model/PromotionSearchResult'), require('./model/Promotions'), require('./model/QueryFilter'), require('./model/Range2Filter'), require('./model/RangeFilter'), require('./model/Recommender'), require('./model/RecommendersResult'), require('./model/Recurrence'), require('./model/RedemptionLimitPerPeriod'), require('./model/RedemptionLimits'), require('./model/ResourceInfo'), require('./model/ResourceObject'), require('./model/ResultPage'), require('./model/Role'), require('./model/RoleFunctionalPermission'), require('./model/RoleFunctionalPermissions'), require('./model/RoleLocalePermission'), require('./model/RoleLocalePermissions'), require('./model/RoleModulePermission'), require('./model/RoleModulePermissions'), require('./model/RolePermissions'), require('./model/RoleSearchRequest'), require('./model/RoleSearchResult'), require('./model/RoleWebdavPermission'), require('./model/RoleWebdavPermissions'), require('./model/Roles'), require('./model/Rule'), require('./model/Schedule'), require('./model/SearchRequest'), require('./model/ShippingAddressUpdateRequest'), require('./model/Site'), require('./model/SitePreferences'), require('./model/SiteResourceInfo'), require('./model/SiteSearchResult'), require('./model/Sites'), require('./model/Slot'), require('./model/SlotConfiguration'), require('./model/SlotConfigurationAbtestGroupAssignment'), require('./model/SlotConfigurationAssignmentInformation'), require('./model/SlotConfigurationCampaignAssignment'), require('./model/SlotConfigurationCampaignAssignmentSearchResult'), require('./model/SlotConfigurationSearchResult'), require('./model/SlotConfigurations'), require('./model/SlotContent'), require('./model/SlotSearchResult'), require('./model/Slots'), require('./model/Sort'), require('./model/SortingRule'), require('./model/SortingRuleSearchResult'), require('./model/SortingRuleStep'), require('./model/SourceCodeGroup'), require('./model/SourceCodeGroupSearchResult'), require('./model/SourceCodeGroups'), require('./model/SourceCodeRedirectInfo'), require('./model/SourceCodeSpecification'), require('./model/Status'), require('./model/StatusMetadata'), require('./model/Store'), require('./model/StoreSearchResult'), require('./model/Stores'), require('./model/Tag'), require('./model/TermFilter'), require('./model/TermQuery'), require('./model/TextQuery'), require('./model/TimeOfDay'), require('./model/User'), require('./model/UserSearchResult'), require('./model/Users'), require('./model/Variant'), require('./model/VariantSearchResult'), require('./model/Variants'), require('./model/VariationAttribute'), require('./model/VariationAttributeValue'), require('./model/VariationAttributeValues'), require('./model/VariationAttributes'), require('./model/VariationGroup'), require('./model/VariationGroups'), require('./model/VersionRangeObject'), require('./model/WebdavPermission'), require('./model/WebdavPermissions'), require('./api/AlertsApi'), require('./api/CatalogSearchApi'), require('./api/CatalogsApi'), require('./api/CategorySearchApi'), require('./api/CodeVersionsApi'), require('./api/CustomObjectDefinitionsApi'), require('./api/CustomObjectsApi'), require('./api/CustomObjectsSearchApi'), require('./api/CustomerListsApi'), require('./api/GlobalPreferencesApi'), require('./api/InventoryListSearchApi'), require('./api/InventoryListsApi'), require('./api/JobExecutionSearchApi'), require('./api/JobsApi'), require('./api/LibrariesApi'), require('./api/LocaleInfoApi'), require('./api/LogRequestsApi'), require('./api/OcapiConfigsApi'), require('./api/PermissionsApi'), require('./api/ProductSearchApi'), require('./api/ProductsApi'), require('./api/RoleSearchApi'), require('./api/RolesApi'), require('./api/SettingsApi'), require('./api/SitePreferencesApi'), require('./api/SiteSearchApi'), require('./api/SitesApi'), require('./api/SystemObjectDefinitionSearchApi'), require('./api/SystemObjectDefinitionsApi'), require('./api/UserSearchApi'), require('./api/UsersApi'));
  }
}(function(ApiClient, AbTest, AbTestGroup, AbTestSearchResult, AbTestSegment, AbTestSegmentStats, AbTestTrigger, AbTests, AccountTransaction, AlertDescriptor, AlertDescriptorSettings, AlertDescriptors, AlertDescriptorsRevalidationRequest, AlertItem, AlertItems, AlertSettings, ApplicationPermissions, Bmpermissions, BoolFilter, BoolQuery, Campaign, CampaignSearchResult, Campaigns, CartridgePathAddRequest, CartridgePathApiResponse, CartridgePathCreateRequest, Catalog, CatalogCategoryId, CatalogSearchResult, Catalogs, Categories, Category, CategoryLink, CategoryLinks, CategoryProductAssignment, CategoryProductAssignmentSearchRequest, CategoryProductAssignmentSearchResult, CategorySearchResult, CodeVersion, CodeVersionResult, ContentAsset, ContentAssetResult, ContentFolder, ContentFolderAssignment, ContentFolderResult, ContentSubFolderResult, Coupon, CouponCode, CouponCodes, CouponMultiCodesRequest, CouponRedemption, CouponRedemptionSearchResult, CouponSearchResult, CouponSystemCodeConfig, Coupons, Credentials, Cscpermissions, CustomLogSettings, CustomObject, CustomObjectSearchResult, Customer, CustomerAddress, CustomerAddressResult, CustomerGroup, CustomerGroupMember, CustomerGroupMemberSearchResult, CustomerGroupMembers, CustomerGroupSearchResult, CustomerGroups, CustomerList, CustomerListLink, CustomerSearchHit, CustomerSearchResult, EcdnLogFetchRequest, EcdnLogFetchResponse, FilteredQuery, FunctionalPermission, FunctionalPermissions, GiftCertificate, GiftCertificateSearchResult, GiftCertificates, ImageGroup, InventoryList, InventoryListSearchResult, InventoryLists, JobExecution, JobExecutionParameter, JobExecutionRequest, JobExecutionSearchResult, JobStepExecution, Locale, LocalePermission, LocalePermissions, LocaleResult, LogCategory, MarkupText, Master, MediaFile, MenuAction, MenuItem, ModulePermissions, Money, NestedQuery, ObjectAttributeDefinition, ObjectAttributeDefinitionSearchResult, ObjectAttributeDefinitions, ObjectAttributeGroup, ObjectAttributeGroupSearchResult, ObjectAttributeGroups, ObjectAttributeValueDefinition, ObjectTypeDefinition, ObjectTypeDefinitionSearchResult, ObjectTypeDefinitions, OcapiConfigsApiRequest, OcapiConfigsApiResponse, OrderConfirmationStatusUpdateRequest, OrderExportStatusUpdateRequest, OrderExternalStatusUpdateRequest, OrderPaymentStatusUpdateRequest, OrderShippingStatusUpdateRequest, OrderStatusUpdateRequest, OrganizationPreferences, PasswordChangeRequest, PathRecord, PreferenceValue, PreferenceValueSearchResult, Product, ProductInventoryRecord, ProductInventoryRecordAllocation, ProductInventoryRecords, ProductOption, ProductOptionValue, ProductOptionValues, ProductOptions, ProductSearchResult, ProductType, Promotion, PromotionAbtestGroupAssignment, PromotionAssignmentInformation, PromotionCampaignAssignment, PromotionCampaignAssignmentSearchResult, PromotionSearchResult, Promotions, QueryFilter, Range2Filter, RangeFilter, Recommender, RecommendersResult, Recurrence, RedemptionLimitPerPeriod, RedemptionLimits, ResourceInfo, ResourceObject, ResultPage, Role, RoleFunctionalPermission, RoleFunctionalPermissions, RoleLocalePermission, RoleLocalePermissions, RoleModulePermission, RoleModulePermissions, RolePermissions, RoleSearchRequest, RoleSearchResult, RoleWebdavPermission, RoleWebdavPermissions, Roles, Rule, Schedule, SearchRequest, ShippingAddressUpdateRequest, Site, SitePreferences, SiteResourceInfo, SiteSearchResult, Sites, Slot, SlotConfiguration, SlotConfigurationAbtestGroupAssignment, SlotConfigurationAssignmentInformation, SlotConfigurationCampaignAssignment, SlotConfigurationCampaignAssignmentSearchResult, SlotConfigurationSearchResult, SlotConfigurations, SlotContent, SlotSearchResult, Slots, Sort, SortingRule, SortingRuleSearchResult, SortingRuleStep, SourceCodeGroup, SourceCodeGroupSearchResult, SourceCodeGroups, SourceCodeRedirectInfo, SourceCodeSpecification, Status, StatusMetadata, Store, StoreSearchResult, Stores, Tag, TermFilter, TermQuery, TextQuery, TimeOfDay, User, UserSearchResult, Users, Variant, VariantSearchResult, Variants, VariationAttribute, VariationAttributeValue, VariationAttributeValues, VariationAttributes, VariationGroup, VariationGroups, VersionRangeObject, WebdavPermission, WebdavPermissions, AlertsApi, CatalogSearchApi, CatalogsApi, CategorySearchApi, CodeVersionsApi, CustomObjectDefinitionsApi, CustomObjectsApi, CustomObjectsSearchApi, CustomerListsApi, GlobalPreferencesApi, InventoryListSearchApi, InventoryListsApi, JobExecutionSearchApi, JobsApi, LibrariesApi, LocaleInfoApi, LogRequestsApi, OcapiConfigsApi, PermissionsApi, ProductSearchApi, ProductsApi, RoleSearchApi, RolesApi, SettingsApi, SitePreferencesApi, SiteSearchApi, SitesApi, SystemObjectDefinitionSearchApi, SystemObjectDefinitionsApi, UserSearchApi, UsersApi) {
  'use strict';

  /**
   * JS API client generated by OpenAPI Generator.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var DataApi = require('index'); // See note below*.
   * var xxxSvc = new DataApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new DataApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new DataApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new DataApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 20.4
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AbTest model constructor.
     * @property {module:model/AbTest}
     */
    AbTest: AbTest,
    /**
     * The AbTestGroup model constructor.
     * @property {module:model/AbTestGroup}
     */
    AbTestGroup: AbTestGroup,
    /**
     * The AbTestSearchResult model constructor.
     * @property {module:model/AbTestSearchResult}
     */
    AbTestSearchResult: AbTestSearchResult,
    /**
     * The AbTestSegment model constructor.
     * @property {module:model/AbTestSegment}
     */
    AbTestSegment: AbTestSegment,
    /**
     * The AbTestSegmentStats model constructor.
     * @property {module:model/AbTestSegmentStats}
     */
    AbTestSegmentStats: AbTestSegmentStats,
    /**
     * The AbTestTrigger model constructor.
     * @property {module:model/AbTestTrigger}
     */
    AbTestTrigger: AbTestTrigger,
    /**
     * The AbTests model constructor.
     * @property {module:model/AbTests}
     */
    AbTests: AbTests,
    /**
     * The AccountTransaction model constructor.
     * @property {module:model/AccountTransaction}
     */
    AccountTransaction: AccountTransaction,
    /**
     * The AlertDescriptor model constructor.
     * @property {module:model/AlertDescriptor}
     */
    AlertDescriptor: AlertDescriptor,
    /**
     * The AlertDescriptorSettings model constructor.
     * @property {module:model/AlertDescriptorSettings}
     */
    AlertDescriptorSettings: AlertDescriptorSettings,
    /**
     * The AlertDescriptors model constructor.
     * @property {module:model/AlertDescriptors}
     */
    AlertDescriptors: AlertDescriptors,
    /**
     * The AlertDescriptorsRevalidationRequest model constructor.
     * @property {module:model/AlertDescriptorsRevalidationRequest}
     */
    AlertDescriptorsRevalidationRequest: AlertDescriptorsRevalidationRequest,
    /**
     * The AlertItem model constructor.
     * @property {module:model/AlertItem}
     */
    AlertItem: AlertItem,
    /**
     * The AlertItems model constructor.
     * @property {module:model/AlertItems}
     */
    AlertItems: AlertItems,
    /**
     * The AlertSettings model constructor.
     * @property {module:model/AlertSettings}
     */
    AlertSettings: AlertSettings,
    /**
     * The ApplicationPermissions model constructor.
     * @property {module:model/ApplicationPermissions}
     */
    ApplicationPermissions: ApplicationPermissions,
    /**
     * The Bmpermissions model constructor.
     * @property {module:model/Bmpermissions}
     */
    Bmpermissions: Bmpermissions,
    /**
     * The BoolFilter model constructor.
     * @property {module:model/BoolFilter}
     */
    BoolFilter: BoolFilter,
    /**
     * The BoolQuery model constructor.
     * @property {module:model/BoolQuery}
     */
    BoolQuery: BoolQuery,
    /**
     * The Campaign model constructor.
     * @property {module:model/Campaign}
     */
    Campaign: Campaign,
    /**
     * The CampaignSearchResult model constructor.
     * @property {module:model/CampaignSearchResult}
     */
    CampaignSearchResult: CampaignSearchResult,
    /**
     * The Campaigns model constructor.
     * @property {module:model/Campaigns}
     */
    Campaigns: Campaigns,
    /**
     * The CartridgePathAddRequest model constructor.
     * @property {module:model/CartridgePathAddRequest}
     */
    CartridgePathAddRequest: CartridgePathAddRequest,
    /**
     * The CartridgePathApiResponse model constructor.
     * @property {module:model/CartridgePathApiResponse}
     */
    CartridgePathApiResponse: CartridgePathApiResponse,
    /**
     * The CartridgePathCreateRequest model constructor.
     * @property {module:model/CartridgePathCreateRequest}
     */
    CartridgePathCreateRequest: CartridgePathCreateRequest,
    /**
     * The Catalog model constructor.
     * @property {module:model/Catalog}
     */
    Catalog: Catalog,
    /**
     * The CatalogCategoryId model constructor.
     * @property {module:model/CatalogCategoryId}
     */
    CatalogCategoryId: CatalogCategoryId,
    /**
     * The CatalogSearchResult model constructor.
     * @property {module:model/CatalogSearchResult}
     */
    CatalogSearchResult: CatalogSearchResult,
    /**
     * The Catalogs model constructor.
     * @property {module:model/Catalogs}
     */
    Catalogs: Catalogs,
    /**
     * The Categories model constructor.
     * @property {module:model/Categories}
     */
    Categories: Categories,
    /**
     * The Category model constructor.
     * @property {module:model/Category}
     */
    Category: Category,
    /**
     * The CategoryLink model constructor.
     * @property {module:model/CategoryLink}
     */
    CategoryLink: CategoryLink,
    /**
     * The CategoryLinks model constructor.
     * @property {module:model/CategoryLinks}
     */
    CategoryLinks: CategoryLinks,
    /**
     * The CategoryProductAssignment model constructor.
     * @property {module:model/CategoryProductAssignment}
     */
    CategoryProductAssignment: CategoryProductAssignment,
    /**
     * The CategoryProductAssignmentSearchRequest model constructor.
     * @property {module:model/CategoryProductAssignmentSearchRequest}
     */
    CategoryProductAssignmentSearchRequest: CategoryProductAssignmentSearchRequest,
    /**
     * The CategoryProductAssignmentSearchResult model constructor.
     * @property {module:model/CategoryProductAssignmentSearchResult}
     */
    CategoryProductAssignmentSearchResult: CategoryProductAssignmentSearchResult,
    /**
     * The CategorySearchResult model constructor.
     * @property {module:model/CategorySearchResult}
     */
    CategorySearchResult: CategorySearchResult,
    /**
     * The CodeVersion model constructor.
     * @property {module:model/CodeVersion}
     */
    CodeVersion: CodeVersion,
    /**
     * The CodeVersionResult model constructor.
     * @property {module:model/CodeVersionResult}
     */
    CodeVersionResult: CodeVersionResult,
    /**
     * The ContentAsset model constructor.
     * @property {module:model/ContentAsset}
     */
    ContentAsset: ContentAsset,
    /**
     * The ContentAssetResult model constructor.
     * @property {module:model/ContentAssetResult}
     */
    ContentAssetResult: ContentAssetResult,
    /**
     * The ContentFolder model constructor.
     * @property {module:model/ContentFolder}
     */
    ContentFolder: ContentFolder,
    /**
     * The ContentFolderAssignment model constructor.
     * @property {module:model/ContentFolderAssignment}
     */
    ContentFolderAssignment: ContentFolderAssignment,
    /**
     * The ContentFolderResult model constructor.
     * @property {module:model/ContentFolderResult}
     */
    ContentFolderResult: ContentFolderResult,
    /**
     * The ContentSubFolderResult model constructor.
     * @property {module:model/ContentSubFolderResult}
     */
    ContentSubFolderResult: ContentSubFolderResult,
    /**
     * The Coupon model constructor.
     * @property {module:model/Coupon}
     */
    Coupon: Coupon,
    /**
     * The CouponCode model constructor.
     * @property {module:model/CouponCode}
     */
    CouponCode: CouponCode,
    /**
     * The CouponCodes model constructor.
     * @property {module:model/CouponCodes}
     */
    CouponCodes: CouponCodes,
    /**
     * The CouponMultiCodesRequest model constructor.
     * @property {module:model/CouponMultiCodesRequest}
     */
    CouponMultiCodesRequest: CouponMultiCodesRequest,
    /**
     * The CouponRedemption model constructor.
     * @property {module:model/CouponRedemption}
     */
    CouponRedemption: CouponRedemption,
    /**
     * The CouponRedemptionSearchResult model constructor.
     * @property {module:model/CouponRedemptionSearchResult}
     */
    CouponRedemptionSearchResult: CouponRedemptionSearchResult,
    /**
     * The CouponSearchResult model constructor.
     * @property {module:model/CouponSearchResult}
     */
    CouponSearchResult: CouponSearchResult,
    /**
     * The CouponSystemCodeConfig model constructor.
     * @property {module:model/CouponSystemCodeConfig}
     */
    CouponSystemCodeConfig: CouponSystemCodeConfig,
    /**
     * The Coupons model constructor.
     * @property {module:model/Coupons}
     */
    Coupons: Coupons,
    /**
     * The Credentials model constructor.
     * @property {module:model/Credentials}
     */
    Credentials: Credentials,
    /**
     * The Cscpermissions model constructor.
     * @property {module:model/Cscpermissions}
     */
    Cscpermissions: Cscpermissions,
    /**
     * The CustomLogSettings model constructor.
     * @property {module:model/CustomLogSettings}
     */
    CustomLogSettings: CustomLogSettings,
    /**
     * The CustomObject model constructor.
     * @property {module:model/CustomObject}
     */
    CustomObject: CustomObject,
    /**
     * The CustomObjectSearchResult model constructor.
     * @property {module:model/CustomObjectSearchResult}
     */
    CustomObjectSearchResult: CustomObjectSearchResult,
    /**
     * The Customer model constructor.
     * @property {module:model/Customer}
     */
    Customer: Customer,
    /**
     * The CustomerAddress model constructor.
     * @property {module:model/CustomerAddress}
     */
    CustomerAddress: CustomerAddress,
    /**
     * The CustomerAddressResult model constructor.
     * @property {module:model/CustomerAddressResult}
     */
    CustomerAddressResult: CustomerAddressResult,
    /**
     * The CustomerGroup model constructor.
     * @property {module:model/CustomerGroup}
     */
    CustomerGroup: CustomerGroup,
    /**
     * The CustomerGroupMember model constructor.
     * @property {module:model/CustomerGroupMember}
     */
    CustomerGroupMember: CustomerGroupMember,
    /**
     * The CustomerGroupMemberSearchResult model constructor.
     * @property {module:model/CustomerGroupMemberSearchResult}
     */
    CustomerGroupMemberSearchResult: CustomerGroupMemberSearchResult,
    /**
     * The CustomerGroupMembers model constructor.
     * @property {module:model/CustomerGroupMembers}
     */
    CustomerGroupMembers: CustomerGroupMembers,
    /**
     * The CustomerGroupSearchResult model constructor.
     * @property {module:model/CustomerGroupSearchResult}
     */
    CustomerGroupSearchResult: CustomerGroupSearchResult,
    /**
     * The CustomerGroups model constructor.
     * @property {module:model/CustomerGroups}
     */
    CustomerGroups: CustomerGroups,
    /**
     * The CustomerList model constructor.
     * @property {module:model/CustomerList}
     */
    CustomerList: CustomerList,
    /**
     * The CustomerListLink model constructor.
     * @property {module:model/CustomerListLink}
     */
    CustomerListLink: CustomerListLink,
    /**
     * The CustomerSearchHit model constructor.
     * @property {module:model/CustomerSearchHit}
     */
    CustomerSearchHit: CustomerSearchHit,
    /**
     * The CustomerSearchResult model constructor.
     * @property {module:model/CustomerSearchResult}
     */
    CustomerSearchResult: CustomerSearchResult,
    /**
     * The EcdnLogFetchRequest model constructor.
     * @property {module:model/EcdnLogFetchRequest}
     */
    EcdnLogFetchRequest: EcdnLogFetchRequest,
    /**
     * The EcdnLogFetchResponse model constructor.
     * @property {module:model/EcdnLogFetchResponse}
     */
    EcdnLogFetchResponse: EcdnLogFetchResponse,
    /**
     * The FilteredQuery model constructor.
     * @property {module:model/FilteredQuery}
     */
    FilteredQuery: FilteredQuery,
    /**
     * The FunctionalPermission model constructor.
     * @property {module:model/FunctionalPermission}
     */
    FunctionalPermission: FunctionalPermission,
    /**
     * The FunctionalPermissions model constructor.
     * @property {module:model/FunctionalPermissions}
     */
    FunctionalPermissions: FunctionalPermissions,
    /**
     * The GiftCertificate model constructor.
     * @property {module:model/GiftCertificate}
     */
    GiftCertificate: GiftCertificate,
    /**
     * The GiftCertificateSearchResult model constructor.
     * @property {module:model/GiftCertificateSearchResult}
     */
    GiftCertificateSearchResult: GiftCertificateSearchResult,
    /**
     * The GiftCertificates model constructor.
     * @property {module:model/GiftCertificates}
     */
    GiftCertificates: GiftCertificates,
    /**
     * The ImageGroup model constructor.
     * @property {module:model/ImageGroup}
     */
    ImageGroup: ImageGroup,
    /**
     * The InventoryList model constructor.
     * @property {module:model/InventoryList}
     */
    InventoryList: InventoryList,
    /**
     * The InventoryListSearchResult model constructor.
     * @property {module:model/InventoryListSearchResult}
     */
    InventoryListSearchResult: InventoryListSearchResult,
    /**
     * The InventoryLists model constructor.
     * @property {module:model/InventoryLists}
     */
    InventoryLists: InventoryLists,
    /**
     * The JobExecution model constructor.
     * @property {module:model/JobExecution}
     */
    JobExecution: JobExecution,
    /**
     * The JobExecutionParameter model constructor.
     * @property {module:model/JobExecutionParameter}
     */
    JobExecutionParameter: JobExecutionParameter,
    /**
     * The JobExecutionRequest model constructor.
     * @property {module:model/JobExecutionRequest}
     */
    JobExecutionRequest: JobExecutionRequest,
    /**
     * The JobExecutionSearchResult model constructor.
     * @property {module:model/JobExecutionSearchResult}
     */
    JobExecutionSearchResult: JobExecutionSearchResult,
    /**
     * The JobStepExecution model constructor.
     * @property {module:model/JobStepExecution}
     */
    JobStepExecution: JobStepExecution,
    /**
     * The Locale model constructor.
     * @property {module:model/Locale}
     */
    Locale: Locale,
    /**
     * The LocalePermission model constructor.
     * @property {module:model/LocalePermission}
     */
    LocalePermission: LocalePermission,
    /**
     * The LocalePermissions model constructor.
     * @property {module:model/LocalePermissions}
     */
    LocalePermissions: LocalePermissions,
    /**
     * The LocaleResult model constructor.
     * @property {module:model/LocaleResult}
     */
    LocaleResult: LocaleResult,
    /**
     * The LogCategory model constructor.
     * @property {module:model/LogCategory}
     */
    LogCategory: LogCategory,
    /**
     * The MarkupText model constructor.
     * @property {module:model/MarkupText}
     */
    MarkupText: MarkupText,
    /**
     * The Master model constructor.
     * @property {module:model/Master}
     */
    Master: Master,
    /**
     * The MediaFile model constructor.
     * @property {module:model/MediaFile}
     */
    MediaFile: MediaFile,
    /**
     * The MenuAction model constructor.
     * @property {module:model/MenuAction}
     */
    MenuAction: MenuAction,
    /**
     * The MenuItem model constructor.
     * @property {module:model/MenuItem}
     */
    MenuItem: MenuItem,
    /**
     * The ModulePermissions model constructor.
     * @property {module:model/ModulePermissions}
     */
    ModulePermissions: ModulePermissions,
    /**
     * The Money model constructor.
     * @property {module:model/Money}
     */
    Money: Money,
    /**
     * The NestedQuery model constructor.
     * @property {module:model/NestedQuery}
     */
    NestedQuery: NestedQuery,
    /**
     * The ObjectAttributeDefinition model constructor.
     * @property {module:model/ObjectAttributeDefinition}
     */
    ObjectAttributeDefinition: ObjectAttributeDefinition,
    /**
     * The ObjectAttributeDefinitionSearchResult model constructor.
     * @property {module:model/ObjectAttributeDefinitionSearchResult}
     */
    ObjectAttributeDefinitionSearchResult: ObjectAttributeDefinitionSearchResult,
    /**
     * The ObjectAttributeDefinitions model constructor.
     * @property {module:model/ObjectAttributeDefinitions}
     */
    ObjectAttributeDefinitions: ObjectAttributeDefinitions,
    /**
     * The ObjectAttributeGroup model constructor.
     * @property {module:model/ObjectAttributeGroup}
     */
    ObjectAttributeGroup: ObjectAttributeGroup,
    /**
     * The ObjectAttributeGroupSearchResult model constructor.
     * @property {module:model/ObjectAttributeGroupSearchResult}
     */
    ObjectAttributeGroupSearchResult: ObjectAttributeGroupSearchResult,
    /**
     * The ObjectAttributeGroups model constructor.
     * @property {module:model/ObjectAttributeGroups}
     */
    ObjectAttributeGroups: ObjectAttributeGroups,
    /**
     * The ObjectAttributeValueDefinition model constructor.
     * @property {module:model/ObjectAttributeValueDefinition}
     */
    ObjectAttributeValueDefinition: ObjectAttributeValueDefinition,
    /**
     * The ObjectTypeDefinition model constructor.
     * @property {module:model/ObjectTypeDefinition}
     */
    ObjectTypeDefinition: ObjectTypeDefinition,
    /**
     * The ObjectTypeDefinitionSearchResult model constructor.
     * @property {module:model/ObjectTypeDefinitionSearchResult}
     */
    ObjectTypeDefinitionSearchResult: ObjectTypeDefinitionSearchResult,
    /**
     * The ObjectTypeDefinitions model constructor.
     * @property {module:model/ObjectTypeDefinitions}
     */
    ObjectTypeDefinitions: ObjectTypeDefinitions,
    /**
     * The OcapiConfigsApiRequest model constructor.
     * @property {module:model/OcapiConfigsApiRequest}
     */
    OcapiConfigsApiRequest: OcapiConfigsApiRequest,
    /**
     * The OcapiConfigsApiResponse model constructor.
     * @property {module:model/OcapiConfigsApiResponse}
     */
    OcapiConfigsApiResponse: OcapiConfigsApiResponse,
    /**
     * The OrderConfirmationStatusUpdateRequest model constructor.
     * @property {module:model/OrderConfirmationStatusUpdateRequest}
     */
    OrderConfirmationStatusUpdateRequest: OrderConfirmationStatusUpdateRequest,
    /**
     * The OrderExportStatusUpdateRequest model constructor.
     * @property {module:model/OrderExportStatusUpdateRequest}
     */
    OrderExportStatusUpdateRequest: OrderExportStatusUpdateRequest,
    /**
     * The OrderExternalStatusUpdateRequest model constructor.
     * @property {module:model/OrderExternalStatusUpdateRequest}
     */
    OrderExternalStatusUpdateRequest: OrderExternalStatusUpdateRequest,
    /**
     * The OrderPaymentStatusUpdateRequest model constructor.
     * @property {module:model/OrderPaymentStatusUpdateRequest}
     */
    OrderPaymentStatusUpdateRequest: OrderPaymentStatusUpdateRequest,
    /**
     * The OrderShippingStatusUpdateRequest model constructor.
     * @property {module:model/OrderShippingStatusUpdateRequest}
     */
    OrderShippingStatusUpdateRequest: OrderShippingStatusUpdateRequest,
    /**
     * The OrderStatusUpdateRequest model constructor.
     * @property {module:model/OrderStatusUpdateRequest}
     */
    OrderStatusUpdateRequest: OrderStatusUpdateRequest,
    /**
     * The OrganizationPreferences model constructor.
     * @property {module:model/OrganizationPreferences}
     */
    OrganizationPreferences: OrganizationPreferences,
    /**
     * The PasswordChangeRequest model constructor.
     * @property {module:model/PasswordChangeRequest}
     */
    PasswordChangeRequest: PasswordChangeRequest,
    /**
     * The PathRecord model constructor.
     * @property {module:model/PathRecord}
     */
    PathRecord: PathRecord,
    /**
     * The PreferenceValue model constructor.
     * @property {module:model/PreferenceValue}
     */
    PreferenceValue: PreferenceValue,
    /**
     * The PreferenceValueSearchResult model constructor.
     * @property {module:model/PreferenceValueSearchResult}
     */
    PreferenceValueSearchResult: PreferenceValueSearchResult,
    /**
     * The Product model constructor.
     * @property {module:model/Product}
     */
    Product: Product,
    /**
     * The ProductInventoryRecord model constructor.
     * @property {module:model/ProductInventoryRecord}
     */
    ProductInventoryRecord: ProductInventoryRecord,
    /**
     * The ProductInventoryRecordAllocation model constructor.
     * @property {module:model/ProductInventoryRecordAllocation}
     */
    ProductInventoryRecordAllocation: ProductInventoryRecordAllocation,
    /**
     * The ProductInventoryRecords model constructor.
     * @property {module:model/ProductInventoryRecords}
     */
    ProductInventoryRecords: ProductInventoryRecords,
    /**
     * The ProductOption model constructor.
     * @property {module:model/ProductOption}
     */
    ProductOption: ProductOption,
    /**
     * The ProductOptionValue model constructor.
     * @property {module:model/ProductOptionValue}
     */
    ProductOptionValue: ProductOptionValue,
    /**
     * The ProductOptionValues model constructor.
     * @property {module:model/ProductOptionValues}
     */
    ProductOptionValues: ProductOptionValues,
    /**
     * The ProductOptions model constructor.
     * @property {module:model/ProductOptions}
     */
    ProductOptions: ProductOptions,
    /**
     * The ProductSearchResult model constructor.
     * @property {module:model/ProductSearchResult}
     */
    ProductSearchResult: ProductSearchResult,
    /**
     * The ProductType model constructor.
     * @property {module:model/ProductType}
     */
    ProductType: ProductType,
    /**
     * The Promotion model constructor.
     * @property {module:model/Promotion}
     */
    Promotion: Promotion,
    /**
     * The PromotionAbtestGroupAssignment model constructor.
     * @property {module:model/PromotionAbtestGroupAssignment}
     */
    PromotionAbtestGroupAssignment: PromotionAbtestGroupAssignment,
    /**
     * The PromotionAssignmentInformation model constructor.
     * @property {module:model/PromotionAssignmentInformation}
     */
    PromotionAssignmentInformation: PromotionAssignmentInformation,
    /**
     * The PromotionCampaignAssignment model constructor.
     * @property {module:model/PromotionCampaignAssignment}
     */
    PromotionCampaignAssignment: PromotionCampaignAssignment,
    /**
     * The PromotionCampaignAssignmentSearchResult model constructor.
     * @property {module:model/PromotionCampaignAssignmentSearchResult}
     */
    PromotionCampaignAssignmentSearchResult: PromotionCampaignAssignmentSearchResult,
    /**
     * The PromotionSearchResult model constructor.
     * @property {module:model/PromotionSearchResult}
     */
    PromotionSearchResult: PromotionSearchResult,
    /**
     * The Promotions model constructor.
     * @property {module:model/Promotions}
     */
    Promotions: Promotions,
    /**
     * The QueryFilter model constructor.
     * @property {module:model/QueryFilter}
     */
    QueryFilter: QueryFilter,
    /**
     * The Range2Filter model constructor.
     * @property {module:model/Range2Filter}
     */
    Range2Filter: Range2Filter,
    /**
     * The RangeFilter model constructor.
     * @property {module:model/RangeFilter}
     */
    RangeFilter: RangeFilter,
    /**
     * The Recommender model constructor.
     * @property {module:model/Recommender}
     */
    Recommender: Recommender,
    /**
     * The RecommendersResult model constructor.
     * @property {module:model/RecommendersResult}
     */
    RecommendersResult: RecommendersResult,
    /**
     * The Recurrence model constructor.
     * @property {module:model/Recurrence}
     */
    Recurrence: Recurrence,
    /**
     * The RedemptionLimitPerPeriod model constructor.
     * @property {module:model/RedemptionLimitPerPeriod}
     */
    RedemptionLimitPerPeriod: RedemptionLimitPerPeriod,
    /**
     * The RedemptionLimits model constructor.
     * @property {module:model/RedemptionLimits}
     */
    RedemptionLimits: RedemptionLimits,
    /**
     * The ResourceInfo model constructor.
     * @property {module:model/ResourceInfo}
     */
    ResourceInfo: ResourceInfo,
    /**
     * The ResourceObject model constructor.
     * @property {module:model/ResourceObject}
     */
    ResourceObject: ResourceObject,
    /**
     * The ResultPage model constructor.
     * @property {module:model/ResultPage}
     */
    ResultPage: ResultPage,
    /**
     * The Role model constructor.
     * @property {module:model/Role}
     */
    Role: Role,
    /**
     * The RoleFunctionalPermission model constructor.
     * @property {module:model/RoleFunctionalPermission}
     */
    RoleFunctionalPermission: RoleFunctionalPermission,
    /**
     * The RoleFunctionalPermissions model constructor.
     * @property {module:model/RoleFunctionalPermissions}
     */
    RoleFunctionalPermissions: RoleFunctionalPermissions,
    /**
     * The RoleLocalePermission model constructor.
     * @property {module:model/RoleLocalePermission}
     */
    RoleLocalePermission: RoleLocalePermission,
    /**
     * The RoleLocalePermissions model constructor.
     * @property {module:model/RoleLocalePermissions}
     */
    RoleLocalePermissions: RoleLocalePermissions,
    /**
     * The RoleModulePermission model constructor.
     * @property {module:model/RoleModulePermission}
     */
    RoleModulePermission: RoleModulePermission,
    /**
     * The RoleModulePermissions model constructor.
     * @property {module:model/RoleModulePermissions}
     */
    RoleModulePermissions: RoleModulePermissions,
    /**
     * The RolePermissions model constructor.
     * @property {module:model/RolePermissions}
     */
    RolePermissions: RolePermissions,
    /**
     * The RoleSearchRequest model constructor.
     * @property {module:model/RoleSearchRequest}
     */
    RoleSearchRequest: RoleSearchRequest,
    /**
     * The RoleSearchResult model constructor.
     * @property {module:model/RoleSearchResult}
     */
    RoleSearchResult: RoleSearchResult,
    /**
     * The RoleWebdavPermission model constructor.
     * @property {module:model/RoleWebdavPermission}
     */
    RoleWebdavPermission: RoleWebdavPermission,
    /**
     * The RoleWebdavPermissions model constructor.
     * @property {module:model/RoleWebdavPermissions}
     */
    RoleWebdavPermissions: RoleWebdavPermissions,
    /**
     * The Roles model constructor.
     * @property {module:model/Roles}
     */
    Roles: Roles,
    /**
     * The Rule model constructor.
     * @property {module:model/Rule}
     */
    Rule: Rule,
    /**
     * The Schedule model constructor.
     * @property {module:model/Schedule}
     */
    Schedule: Schedule,
    /**
     * The SearchRequest model constructor.
     * @property {module:model/SearchRequest}
     */
    SearchRequest: SearchRequest,
    /**
     * The ShippingAddressUpdateRequest model constructor.
     * @property {module:model/ShippingAddressUpdateRequest}
     */
    ShippingAddressUpdateRequest: ShippingAddressUpdateRequest,
    /**
     * The Site model constructor.
     * @property {module:model/Site}
     */
    Site: Site,
    /**
     * The SitePreferences model constructor.
     * @property {module:model/SitePreferences}
     */
    SitePreferences: SitePreferences,
    /**
     * The SiteResourceInfo model constructor.
     * @property {module:model/SiteResourceInfo}
     */
    SiteResourceInfo: SiteResourceInfo,
    /**
     * The SiteSearchResult model constructor.
     * @property {module:model/SiteSearchResult}
     */
    SiteSearchResult: SiteSearchResult,
    /**
     * The Sites model constructor.
     * @property {module:model/Sites}
     */
    Sites: Sites,
    /**
     * The Slot model constructor.
     * @property {module:model/Slot}
     */
    Slot: Slot,
    /**
     * The SlotConfiguration model constructor.
     * @property {module:model/SlotConfiguration}
     */
    SlotConfiguration: SlotConfiguration,
    /**
     * The SlotConfigurationAbtestGroupAssignment model constructor.
     * @property {module:model/SlotConfigurationAbtestGroupAssignment}
     */
    SlotConfigurationAbtestGroupAssignment: SlotConfigurationAbtestGroupAssignment,
    /**
     * The SlotConfigurationAssignmentInformation model constructor.
     * @property {module:model/SlotConfigurationAssignmentInformation}
     */
    SlotConfigurationAssignmentInformation: SlotConfigurationAssignmentInformation,
    /**
     * The SlotConfigurationCampaignAssignment model constructor.
     * @property {module:model/SlotConfigurationCampaignAssignment}
     */
    SlotConfigurationCampaignAssignment: SlotConfigurationCampaignAssignment,
    /**
     * The SlotConfigurationCampaignAssignmentSearchResult model constructor.
     * @property {module:model/SlotConfigurationCampaignAssignmentSearchResult}
     */
    SlotConfigurationCampaignAssignmentSearchResult: SlotConfigurationCampaignAssignmentSearchResult,
    /**
     * The SlotConfigurationSearchResult model constructor.
     * @property {module:model/SlotConfigurationSearchResult}
     */
    SlotConfigurationSearchResult: SlotConfigurationSearchResult,
    /**
     * The SlotConfigurations model constructor.
     * @property {module:model/SlotConfigurations}
     */
    SlotConfigurations: SlotConfigurations,
    /**
     * The SlotContent model constructor.
     * @property {module:model/SlotContent}
     */
    SlotContent: SlotContent,
    /**
     * The SlotSearchResult model constructor.
     * @property {module:model/SlotSearchResult}
     */
    SlotSearchResult: SlotSearchResult,
    /**
     * The Slots model constructor.
     * @property {module:model/Slots}
     */
    Slots: Slots,
    /**
     * The Sort model constructor.
     * @property {module:model/Sort}
     */
    Sort: Sort,
    /**
     * The SortingRule model constructor.
     * @property {module:model/SortingRule}
     */
    SortingRule: SortingRule,
    /**
     * The SortingRuleSearchResult model constructor.
     * @property {module:model/SortingRuleSearchResult}
     */
    SortingRuleSearchResult: SortingRuleSearchResult,
    /**
     * The SortingRuleStep model constructor.
     * @property {module:model/SortingRuleStep}
     */
    SortingRuleStep: SortingRuleStep,
    /**
     * The SourceCodeGroup model constructor.
     * @property {module:model/SourceCodeGroup}
     */
    SourceCodeGroup: SourceCodeGroup,
    /**
     * The SourceCodeGroupSearchResult model constructor.
     * @property {module:model/SourceCodeGroupSearchResult}
     */
    SourceCodeGroupSearchResult: SourceCodeGroupSearchResult,
    /**
     * The SourceCodeGroups model constructor.
     * @property {module:model/SourceCodeGroups}
     */
    SourceCodeGroups: SourceCodeGroups,
    /**
     * The SourceCodeRedirectInfo model constructor.
     * @property {module:model/SourceCodeRedirectInfo}
     */
    SourceCodeRedirectInfo: SourceCodeRedirectInfo,
    /**
     * The SourceCodeSpecification model constructor.
     * @property {module:model/SourceCodeSpecification}
     */
    SourceCodeSpecification: SourceCodeSpecification,
    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status: Status,
    /**
     * The StatusMetadata model constructor.
     * @property {module:model/StatusMetadata}
     */
    StatusMetadata: StatusMetadata,
    /**
     * The Store model constructor.
     * @property {module:model/Store}
     */
    Store: Store,
    /**
     * The StoreSearchResult model constructor.
     * @property {module:model/StoreSearchResult}
     */
    StoreSearchResult: StoreSearchResult,
    /**
     * The Stores model constructor.
     * @property {module:model/Stores}
     */
    Stores: Stores,
    /**
     * The Tag model constructor.
     * @property {module:model/Tag}
     */
    Tag: Tag,
    /**
     * The TermFilter model constructor.
     * @property {module:model/TermFilter}
     */
    TermFilter: TermFilter,
    /**
     * The TermQuery model constructor.
     * @property {module:model/TermQuery}
     */
    TermQuery: TermQuery,
    /**
     * The TextQuery model constructor.
     * @property {module:model/TextQuery}
     */
    TextQuery: TextQuery,
    /**
     * The TimeOfDay model constructor.
     * @property {module:model/TimeOfDay}
     */
    TimeOfDay: TimeOfDay,
    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User: User,
    /**
     * The UserSearchResult model constructor.
     * @property {module:model/UserSearchResult}
     */
    UserSearchResult: UserSearchResult,
    /**
     * The Users model constructor.
     * @property {module:model/Users}
     */
    Users: Users,
    /**
     * The Variant model constructor.
     * @property {module:model/Variant}
     */
    Variant: Variant,
    /**
     * The VariantSearchResult model constructor.
     * @property {module:model/VariantSearchResult}
     */
    VariantSearchResult: VariantSearchResult,
    /**
     * The Variants model constructor.
     * @property {module:model/Variants}
     */
    Variants: Variants,
    /**
     * The VariationAttribute model constructor.
     * @property {module:model/VariationAttribute}
     */
    VariationAttribute: VariationAttribute,
    /**
     * The VariationAttributeValue model constructor.
     * @property {module:model/VariationAttributeValue}
     */
    VariationAttributeValue: VariationAttributeValue,
    /**
     * The VariationAttributeValues model constructor.
     * @property {module:model/VariationAttributeValues}
     */
    VariationAttributeValues: VariationAttributeValues,
    /**
     * The VariationAttributes model constructor.
     * @property {module:model/VariationAttributes}
     */
    VariationAttributes: VariationAttributes,
    /**
     * The VariationGroup model constructor.
     * @property {module:model/VariationGroup}
     */
    VariationGroup: VariationGroup,
    /**
     * The VariationGroups model constructor.
     * @property {module:model/VariationGroups}
     */
    VariationGroups: VariationGroups,
    /**
     * The VersionRangeObject model constructor.
     * @property {module:model/VersionRangeObject}
     */
    VersionRangeObject: VersionRangeObject,
    /**
     * The WebdavPermission model constructor.
     * @property {module:model/WebdavPermission}
     */
    WebdavPermission: WebdavPermission,
    /**
     * The WebdavPermissions model constructor.
     * @property {module:model/WebdavPermissions}
     */
    WebdavPermissions: WebdavPermissions,
    /**
     * The AlertsApi service constructor.
     * @property {module:api/AlertsApi}
     */
    AlertsApi: AlertsApi,
    /**
     * The CatalogSearchApi service constructor.
     * @property {module:api/CatalogSearchApi}
     */
    CatalogSearchApi: CatalogSearchApi,
    /**
     * The CatalogsApi service constructor.
     * @property {module:api/CatalogsApi}
     */
    CatalogsApi: CatalogsApi,
    /**
     * The CategorySearchApi service constructor.
     * @property {module:api/CategorySearchApi}
     */
    CategorySearchApi: CategorySearchApi,
    /**
     * The CodeVersionsApi service constructor.
     * @property {module:api/CodeVersionsApi}
     */
    CodeVersionsApi: CodeVersionsApi,
    /**
     * The CustomObjectDefinitionsApi service constructor.
     * @property {module:api/CustomObjectDefinitionsApi}
     */
    CustomObjectDefinitionsApi: CustomObjectDefinitionsApi,
    /**
     * The CustomObjectsApi service constructor.
     * @property {module:api/CustomObjectsApi}
     */
    CustomObjectsApi: CustomObjectsApi,
    /**
     * The CustomObjectsSearchApi service constructor.
     * @property {module:api/CustomObjectsSearchApi}
     */
    CustomObjectsSearchApi: CustomObjectsSearchApi,
    /**
     * The CustomerListsApi service constructor.
     * @property {module:api/CustomerListsApi}
     */
    CustomerListsApi: CustomerListsApi,
    /**
     * The GlobalPreferencesApi service constructor.
     * @property {module:api/GlobalPreferencesApi}
     */
    GlobalPreferencesApi: GlobalPreferencesApi,
    /**
     * The InventoryListSearchApi service constructor.
     * @property {module:api/InventoryListSearchApi}
     */
    InventoryListSearchApi: InventoryListSearchApi,
    /**
     * The InventoryListsApi service constructor.
     * @property {module:api/InventoryListsApi}
     */
    InventoryListsApi: InventoryListsApi,
    /**
     * The JobExecutionSearchApi service constructor.
     * @property {module:api/JobExecutionSearchApi}
     */
    JobExecutionSearchApi: JobExecutionSearchApi,
    /**
     * The JobsApi service constructor.
     * @property {module:api/JobsApi}
     */
    JobsApi: JobsApi,
    /**
     * The LibrariesApi service constructor.
     * @property {module:api/LibrariesApi}
     */
    LibrariesApi: LibrariesApi,
    /**
     * The LocaleInfoApi service constructor.
     * @property {module:api/LocaleInfoApi}
     */
    LocaleInfoApi: LocaleInfoApi,
    /**
     * The LogRequestsApi service constructor.
     * @property {module:api/LogRequestsApi}
     */
    LogRequestsApi: LogRequestsApi,
    /**
     * The OcapiConfigsApi service constructor.
     * @property {module:api/OcapiConfigsApi}
     */
    OcapiConfigsApi: OcapiConfigsApi,
    /**
     * The PermissionsApi service constructor.
     * @property {module:api/PermissionsApi}
     */
    PermissionsApi: PermissionsApi,
    /**
     * The ProductSearchApi service constructor.
     * @property {module:api/ProductSearchApi}
     */
    ProductSearchApi: ProductSearchApi,
    /**
     * The ProductsApi service constructor.
     * @property {module:api/ProductsApi}
     */
    ProductsApi: ProductsApi,
    /**
     * The RoleSearchApi service constructor.
     * @property {module:api/RoleSearchApi}
     */
    RoleSearchApi: RoleSearchApi,
    /**
     * The RolesApi service constructor.
     * @property {module:api/RolesApi}
     */
    RolesApi: RolesApi,
    /**
     * The SettingsApi service constructor.
     * @property {module:api/SettingsApi}
     */
    SettingsApi: SettingsApi,
    /**
     * The SitePreferencesApi service constructor.
     * @property {module:api/SitePreferencesApi}
     */
    SitePreferencesApi: SitePreferencesApi,
    /**
     * The SiteSearchApi service constructor.
     * @property {module:api/SiteSearchApi}
     */
    SiteSearchApi: SiteSearchApi,
    /**
     * The SitesApi service constructor.
     * @property {module:api/SitesApi}
     */
    SitesApi: SitesApi,
    /**
     * The SystemObjectDefinitionSearchApi service constructor.
     * @property {module:api/SystemObjectDefinitionSearchApi}
     */
    SystemObjectDefinitionSearchApi: SystemObjectDefinitionSearchApi,
    /**
     * The SystemObjectDefinitionsApi service constructor.
     * @property {module:api/SystemObjectDefinitionsApi}
     */
    SystemObjectDefinitionsApi: SystemObjectDefinitionsApi,
    /**
     * The UserSearchApi service constructor.
     * @property {module:api/UserSearchApi}
     */
    UserSearchApi: UserSearchApi,
    /**
     * The UsersApi service constructor.
     * @property {module:api/UsersApi}
     */
    UsersApi: UsersApi
  };

  return exports;
}));
