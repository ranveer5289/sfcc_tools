/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataApi.LibrariesApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('LibrariesApi', function() {
    describe('deleteLibrariesByIDContentByID', function() {
      it('should call deleteLibrariesByIDContentByID successfully', function(done) {
        //uncomment below and update the code to test deleteLibrariesByIDContentByID
        //instance.deleteLibrariesByIDContentByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLibrariesByIDFolderAssignmentsByIDByID', function() {
      it('should call deleteLibrariesByIDFolderAssignmentsByIDByID successfully', function(done) {
        //uncomment below and update the code to test deleteLibrariesByIDFolderAssignmentsByIDByID
        //instance.deleteLibrariesByIDFolderAssignmentsByIDByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteLibrariesByIDFoldersByID', function() {
      it('should call deleteLibrariesByIDFoldersByID successfully', function(done) {
        //uncomment below and update the code to test deleteLibrariesByIDFoldersByID
        //instance.deleteLibrariesByIDFoldersByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibrariesByIDContentByID', function() {
      it('should call getLibrariesByIDContentByID successfully', function(done) {
        //uncomment below and update the code to test getLibrariesByIDContentByID
        //instance.getLibrariesByIDContentByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibrariesByIDContentByIDFolders', function() {
      it('should call getLibrariesByIDContentByIDFolders successfully', function(done) {
        //uncomment below and update the code to test getLibrariesByIDContentByIDFolders
        //instance.getLibrariesByIDContentByIDFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibrariesByIDFolderAssignmentsByIDByID', function() {
      it('should call getLibrariesByIDFolderAssignmentsByIDByID successfully', function(done) {
        //uncomment below and update the code to test getLibrariesByIDFolderAssignmentsByIDByID
        //instance.getLibrariesByIDFolderAssignmentsByIDByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibrariesByIDFoldersByID', function() {
      it('should call getLibrariesByIDFoldersByID successfully', function(done) {
        //uncomment below and update the code to test getLibrariesByIDFoldersByID
        //instance.getLibrariesByIDFoldersByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibrariesByIDFoldersByIDContent', function() {
      it('should call getLibrariesByIDFoldersByIDContent successfully', function(done) {
        //uncomment below and update the code to test getLibrariesByIDFoldersByIDContent
        //instance.getLibrariesByIDFoldersByIDContent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLibrariesByIDFoldersByIDSubFolders', function() {
      it('should call getLibrariesByIDFoldersByIDSubFolders successfully', function(done) {
        //uncomment below and update the code to test getLibrariesByIDFoldersByIDSubFolders
        //instance.getLibrariesByIDFoldersByIDSubFolders(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchLibrariesByIDContentByID', function() {
      it('should call patchLibrariesByIDContentByID successfully', function(done) {
        //uncomment below and update the code to test patchLibrariesByIDContentByID
        //instance.patchLibrariesByIDContentByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchLibrariesByIDFolderAssignmentsByIDByID', function() {
      it('should call patchLibrariesByIDFolderAssignmentsByIDByID successfully', function(done) {
        //uncomment below and update the code to test patchLibrariesByIDFolderAssignmentsByIDByID
        //instance.patchLibrariesByIDFolderAssignmentsByIDByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('patchLibrariesByIDFoldersByID', function() {
      it('should call patchLibrariesByIDFoldersByID successfully', function(done) {
        //uncomment below and update the code to test patchLibrariesByIDFoldersByID
        //instance.patchLibrariesByIDFoldersByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLibrariesByIDContentByID', function() {
      it('should call putLibrariesByIDContentByID successfully', function(done) {
        //uncomment below and update the code to test putLibrariesByIDContentByID
        //instance.putLibrariesByIDContentByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLibrariesByIDFolderAssignmentsByIDByID', function() {
      it('should call putLibrariesByIDFolderAssignmentsByIDByID successfully', function(done) {
        //uncomment below and update the code to test putLibrariesByIDFolderAssignmentsByIDByID
        //instance.putLibrariesByIDFolderAssignmentsByIDByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putLibrariesByIDFoldersByID', function() {
      it('should call putLibrariesByIDFoldersByID successfully', function(done) {
        //uncomment below and update the code to test putLibrariesByIDFoldersByID
        //instance.putLibrariesByIDFoldersByID(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
