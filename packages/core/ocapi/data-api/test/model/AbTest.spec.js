/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    // create a new instance
    //instance = new DataApi.AbTest();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AbTest', function() {
    it('should create an instance of AbTest', function() {
      // uncomment below and update the code to test AbTest
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be.a(DataApi.AbTest);
    });

    it('should have the property customerGroups (base name: "customer_groups")', function() {
      // uncomment below and update the code to test the property customerGroups
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property emailAddresses (base name: "email_addresses")', function() {
      // uncomment below and update the code to test the property emailAddresses
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property endDate (base name: "end_date")', function() {
      // uncomment below and update the code to test the property endDate
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property expirationType (base name: "expiration_type")', function() {
      // uncomment below and update the code to test the property expirationType
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property keyMetricId (base name: "key_metric_id")', function() {
      // uncomment below and update the code to test the property keyMetricId
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property paused (base name: "paused")', function() {
      // uncomment below and update the code to test the property paused
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property segmentCount (base name: "segment_count")', function() {
      // uncomment below and update the code to test the property segmentCount
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property startDate (base name: "start_date")', function() {
      // uncomment below and update the code to test the property startDate
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property testGroups (base name: "test_groups")', function() {
      // uncomment below and update the code to test the property testGroups
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property testSegments (base name: "test_segments")', function() {
      // uncomment below and update the code to test the property testSegments
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

    it('should have the property trigger (base name: "trigger")', function() {
      // uncomment below and update the code to test the property trigger
      //var instance = new DataApi.AbTest();
      //expect(instance).to.be();
    });

  });

}));
