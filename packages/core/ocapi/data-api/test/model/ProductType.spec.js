/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataApi.ProductType();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductType', function() {
    it('should create an instance of ProductType', function() {
      // uncomment below and update the code to test ProductType
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be.a(DataApi.ProductType);
    });

    it('should have the property bundle (base name: "bundle")', function() {
      // uncomment below and update the code to test the property bundle
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property bundled (base name: "bundled")', function() {
      // uncomment below and update the code to test the property bundled
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property item (base name: "item")', function() {
      // uncomment below and update the code to test the property item
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property master (base name: "master")', function() {
      // uncomment below and update the code to test the property master
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property option (base name: "option")', function() {
      // uncomment below and update the code to test the property option
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property partOfProductSet (base name: "part_of_product_set")', function() {
      // uncomment below and update the code to test the property partOfProductSet
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property partOfRetailSet (base name: "part_of_retail_set")', function() {
      // uncomment below and update the code to test the property partOfRetailSet
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property retailSet (base name: "retail_set")', function() {
      // uncomment below and update the code to test the property retailSet
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property set (base name: "set")', function() {
      // uncomment below and update the code to test the property set
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property variant (base name: "variant")', function() {
      // uncomment below and update the code to test the property variant
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

    it('should have the property variationGroup (base name: "variation_group")', function() {
      // uncomment below and update the code to test the property variationGroup
      //var instane = new DataApi.ProductType();
      //expect(instance).to.be();
    });

  });

}));
