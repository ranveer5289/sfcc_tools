/**
 * Data API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 20.8
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.0.0-beta
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    // create a new instance
    //instance = new DataApi.JobStepExecution();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JobStepExecution', function() {
    it('should create an instance of JobStepExecution', function() {
      // uncomment below and update the code to test JobStepExecution
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be.a(DataApi.JobStepExecution);
    });

    it('should have the property chunkSize (base name: "chunk_size")', function() {
      // uncomment below and update the code to test the property chunkSize
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property duration (base name: "duration")', function() {
      // uncomment below and update the code to test the property duration
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property endTime (base name: "end_time")', function() {
      // uncomment below and update the code to test the property endTime
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property executionScope (base name: "execution_scope")', function() {
      // uncomment below and update the code to test the property executionScope
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property executionStatus (base name: "execution_status")', function() {
      // uncomment below and update the code to test the property executionStatus
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property exitStatus (base name: "exit_status")', function() {
      // uncomment below and update the code to test the property exitStatus
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property includeStepsFromJobId (base name: "include_steps_from_job_id")', function() {
      // uncomment below and update the code to test the property includeStepsFromJobId
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property isChunkOriented (base name: "is_chunk_oriented")', function() {
      // uncomment below and update the code to test the property isChunkOriented
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property itemFilterCount (base name: "item_filter_count")', function() {
      // uncomment below and update the code to test the property itemFilterCount
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property itemWriteCount (base name: "item_write_count")', function() {
      // uncomment below and update the code to test the property itemWriteCount
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property modificationTime (base name: "modification_time")', function() {
      // uncomment below and update the code to test the property modificationTime
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "start_time")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property statusMetadata (base name: "status_metadata")', function() {
      // uncomment below and update the code to test the property statusMetadata
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property stepDescription (base name: "step_description")', function() {
      // uncomment below and update the code to test the property stepDescription
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property stepId (base name: "step_id")', function() {
      // uncomment below and update the code to test the property stepId
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property stepTypeId (base name: "step_type_id")', function() {
      // uncomment below and update the code to test the property stepTypeId
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property stepTypeInfo (base name: "step_type_info")', function() {
      // uncomment below and update the code to test the property stepTypeInfo
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

    it('should have the property totalItemCount (base name: "total_item_count")', function() {
      // uncomment below and update the code to test the property totalItemCount
      //var instance = new DataApi.JobStepExecution();
      //expect(instance).to.be();
    });

  });

}));
