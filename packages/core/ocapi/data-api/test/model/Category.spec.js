/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataApi.Category();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Category', function() {
    it('should create an instance of Category', function() {
      // uncomment below and update the code to test Category
      //var instane = new DataApi.Category();
      //expect(instance).to.be.a(DataApi.Category);
    });

    it('should have the property cAlternativeUrl (base name: "c_alternativeUrl")', function() {
      // uncomment below and update the code to test the property cAlternativeUrl
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cCatBannerID (base name: "c_catBannerID")', function() {
      // uncomment below and update the code to test the property cCatBannerID
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cCustomCSSFile (base name: "c_customCSSFile")', function() {
      // uncomment below and update the code to test the property cCustomCSSFile
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cEnableCompare (base name: "c_enableCompare")', function() {
      // uncomment below and update the code to test the property cEnableCompare
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cHeaderMenuBanner (base name: "c_headerMenuBanner")', function() {
      // uncomment below and update the code to test the property cHeaderMenuBanner
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cHeaderMenuOrientation (base name: "c_headerMenuOrientation")', function() {
      // uncomment below and update the code to test the property cHeaderMenuOrientation
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cShowInMenu (base name: "c_showInMenu")', function() {
      // uncomment below and update the code to test the property cShowInMenu
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cSizeChartID (base name: "c_sizeChartID")', function() {
      // uncomment below and update the code to test the property cSizeChartID
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cSlotBannerHtml (base name: "c_slotBannerHtml")', function() {
      // uncomment below and update the code to test the property cSlotBannerHtml
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property cSlotBannerImage (base name: "c_slotBannerImage")', function() {
      // uncomment below and update the code to test the property cSlotBannerImage
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property catalogId (base name: "catalog_id")', function() {
      // uncomment below and update the code to test the property catalogId
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property categories (base name: "categories")', function() {
      // uncomment below and update the code to test the property categories
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property creationDate (base name: "creation_date")', function() {
      // uncomment below and update the code to test the property creationDate
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property image (base name: "image")', function() {
      // uncomment below and update the code to test the property image
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property lastModified (base name: "last_modified")', function() {
      // uncomment below and update the code to test the property lastModified
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property online (base name: "online")', function() {
      // uncomment below and update the code to test the property online
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property pageDescription (base name: "page_description")', function() {
      // uncomment below and update the code to test the property pageDescription
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property pageKeywords (base name: "page_keywords")', function() {
      // uncomment below and update the code to test the property pageKeywords
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property pageTitle (base name: "page_title")', function() {
      // uncomment below and update the code to test the property pageTitle
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property parentCategoryId (base name: "parent_category_id")', function() {
      // uncomment below and update the code to test the property parentCategoryId
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property paths (base name: "paths")', function() {
      // uncomment below and update the code to test the property paths
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property position (base name: "position")', function() {
      // uncomment below and update the code to test the property position
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property sortingRules (base name: "sorting_rules")', function() {
      // uncomment below and update the code to test the property sortingRules
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

    it('should have the property thumbnail (base name: "thumbnail")', function() {
      // uncomment below and update the code to test the property thumbnail
      //var instane = new DataApi.Category();
      //expect(instance).to.be();
    });

  });

}));
