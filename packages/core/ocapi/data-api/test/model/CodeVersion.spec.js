/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataApi.CodeVersion();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CodeVersion', function() {
    it('should create an instance of CodeVersion', function() {
      // uncomment below and update the code to test CodeVersion
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be.a(DataApi.CodeVersion);
    });

    it('should have the property activationTime (base name: "activation_time")', function() {
      // uncomment below and update the code to test the property activationTime
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property cartridges (base name: "cartridges")', function() {
      // uncomment below and update the code to test the property cartridges
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property compatibilityMode (base name: "compatibility_mode")', function() {
      // uncomment below and update the code to test the property compatibilityMode
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property lastModificationTime (base name: "last_modification_time")', function() {
      // uncomment below and update the code to test the property lastModificationTime
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property rollback (base name: "rollback")', function() {
      // uncomment below and update the code to test the property rollback
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property totalSize (base name: "total_size")', function() {
      // uncomment below and update the code to test the property totalSize
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

    it('should have the property webDavUrl (base name: "web_dav_url")', function() {
      // uncomment below and update the code to test the property webDavUrl
      //var instane = new DataApi.CodeVersion();
      //expect(instance).to.be();
    });

  });

}));
