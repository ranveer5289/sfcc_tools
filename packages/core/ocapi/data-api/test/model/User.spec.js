/**
 * Data API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 20.8
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */
(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DataApi);
  }
}(this, function(expect, DataApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DataApi.User();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('User', function() {
    it('should create an instance of User', function() {
      // uncomment below and update the code to test User
      //var instane = new DataApi.User();
      //expect(instance).to.be.a(DataApi.User);
    });

    it('should have the property disabled (base name: "disabled")', function() {
      // uncomment below and update the code to test the property disabled
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property email (base name: "email")', function() {
      // uncomment below and update the code to test the property email
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property externalId (base name: "external_id")', function() {
      // uncomment below and update the code to test the property externalId
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property firstName (base name: "first_name")', function() {
      // uncomment below and update the code to test the property firstName
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lastLoginDate (base name: "last_login_date")', function() {
      // uncomment below and update the code to test the property lastLoginDate
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property lastName (base name: "last_name")', function() {
      // uncomment below and update the code to test the property lastName
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property link (base name: "link")', function() {
      // uncomment below and update the code to test the property link
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property locked (base name: "locked")', function() {
      // uncomment below and update the code to test the property locked
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property login (base name: "login")', function() {
      // uncomment below and update the code to test the property login
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property password (base name: "password")', function() {
      // uncomment below and update the code to test the property password
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property passwordExpirationDate (base name: "password_expiration_date")', function() {
      // uncomment below and update the code to test the property passwordExpirationDate
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property passwordModificationDate (base name: "password_modification_date")', function() {
      // uncomment below and update the code to test the property passwordModificationDate
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property preferredDataLocale (base name: "preferred_data_locale")', function() {
      // uncomment below and update the code to test the property preferredDataLocale
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property preferredUiLocale (base name: "preferred_ui_locale")', function() {
      // uncomment below and update the code to test the property preferredUiLocale
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

    it('should have the property roles (base name: "roles")', function() {
      // uncomment below and update the code to test the property roles
      //var instane = new DataApi.User();
      //expect(instance).to.be();
    });

  });

}));
